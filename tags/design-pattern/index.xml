<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Pattern on Kunjan&#39;s Web Space</title>
    <link>http://kunjan.in/tags/design-pattern/</link>
    <description>Recent content in Design Pattern on Kunjan&#39;s Web Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Apr 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://kunjan.in/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional Command Pattern</title>
      <link>http://kunjan.in/2015/04/functional-command-pattern/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/04/functional-command-pattern/</guid>
      <description>Command pattern is a pattern which allows executor of the pattern to execute or playback the commands. In most of the application wherever Undo/Redo is implemented this pattern is used.
Here is C# code.
 Now, in this code Command Pattern is not in its purest form. As, normally in command pattern we are saving state of outside object. Instead I just returned the result to mock out side object.</description>
    </item>
    
    <item>
      <title>Functional Strategy Pattern</title>
      <link>http://kunjan.in/2015/04/functional-strategy-pattern/</link>
      <pubDate>Fri, 24 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/04/functional-strategy-pattern/</guid>
      <description>Another pattern that is widely used in Object Oriented world. And as far as .Net world is concern it is may be most used pattern in wide range of .Net API. And it heavily used in heavily used LINQ API.
So, I guess giving a understanding of that is kinda waste of space. Have a look at C# code.
 People familiar with LINQ and lovers of Lambda will definitely argue that this is can be replaced by delegates.</description>
    </item>
    
    <item>
      <title>Functional Singleton Pattern</title>
      <link>http://kunjan.in/2015/04/functional-singleton-pattern/</link>
      <pubDate>Thu, 23 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/04/functional-singleton-pattern/</guid>
      <description>This is my favorite pattern. First pattern I learn. And till date I don&amp;rsquo;t know where to use it. So, I use everywhere. :P
I have mainly used for database connection object and then all JavaScript frameworks are exposing Singleton object only. I can say it is quite useful in case of web.
Fun part about this pattern is that most of the people including me always use this pattern to show off that we know patterns and we follow it in practice but in most cases that practice starts and stops with Singleton Pattern.</description>
    </item>
    
    <item>
      <title>Functional Factory Pattern</title>
      <link>http://kunjan.in/2015/04/functional-factory-pattern/</link>
      <pubDate>Wed, 22 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/04/functional-factory-pattern/</guid>
      <description>The fun part working or explaining functional pattern is word functional can be used in very fun way. Just like it is used in title here.
Now, factory pattern may be the most used pattern in Object Oriented world. Here is code in C#.
 Factory method is basically used to abstract away the object creation. I am not worried how object is created but I am worried about the behavior of the objects that are created.</description>
    </item>
    
    <item>
      <title>Demystifying Design Pattern in a Functional Way</title>
      <link>http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</guid>
      <description>As functional programming is taking pace in current software development. There is always a question what is the difference and why on the earth I should bother about it.
Most of the time reason of the question comes because of human nature of resistance towards learning new things. And then there are people who can easily learn new things but even for them unlearning something and re-learning new things is pretty tough.</description>
    </item>
    
  </channel>
</rss>