<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on Kunjan&#39;s Web Space</title>
    <link>http://kunjan.in/tags/functional-programming/</link>
    <description>Recent content in Functional Programming on Kunjan&#39;s Web Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://kunjan.in/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sentiment Analysis of Mahabharata using F#</title>
      <link>http://kunjan.in/2016/12/epic-adventure-using-fsharp/</link>
      <pubDate>Sat, 17 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2016/12/epic-adventure-using-fsharp/</guid>
      <description>This article is part of FSAdvent 2016 calendar.
This my second post of 2016. Sadly not much of writing this year. So, I need to cover up by this little longish post. So, grab your favorite coffee / tea before getting started.
There is one wonderful coincidence here that both post of 2016 is based on Epic Mahabharata. If anyone interested in poem like things do check out my another post.</description>
    </item>
    
    <item>
      <title>1729</title>
      <link>http://kunjan.in/2015/12/1729/</link>
      <pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/12/1729/</guid>
      <description>This post is part of F# Advent calender. Thanks Sergey Tihon for arranging this and giving me chance.
 First I like to clarify that this was not my original choice for FSAdvent calender. I was going to write long post about web, AKKA, api and real time system. My current working area. But this time&amp;rsquo;s calender entries are reaching new level and dimension. And recent post from Evelina Gabasova is kind of reason behind change.</description>
    </item>
    
    <item>
      <title>Reactive Services with Servicestack and F#</title>
      <link>http://kunjan.in/2015/11/reactive-services-with-servicestack-and-fsharp/</link>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/11/reactive-services-with-servicestack-and-fsharp/</guid>
      <description>Reactive word is not new nowadays. If you want your library to get limelight, use reactive word in the name any way possible and it will definitely get initial attention. Reactive word is appropriate for things that follows reactive manifesto. That is true for now. And there are many variant of libraries on server and client to fulfil this.
Let&amp;rsquo;s start from the start of web.
We were having old web were we used to do post event of page.</description>
    </item>
    
    <item>
      <title>Azure web sites with Paket</title>
      <link>http://kunjan.in/2015/11/azure-web-sites-with-paket/</link>
      <pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/11/azure-web-sites-with-paket/</guid>
      <description>Whoever worked with Microsoft Shop knows about nuget. It is package manager for anything and everything related to .Net. And it is getting better and better with versions coming in. But again it is nowhere near maturity needed to work with projects having many small projects. Things get cranky soon.
Now, there is better option as per my opinion called Paket. Very easy to get started. And so damn reliable. Couple of more command to learn but I guess it is ok.</description>
    </item>
    
    <item>
      <title>Demystifying Design Pattern in a Functional Way</title>
      <link>http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</guid>
      <description>As functional programming is taking pace in current software development. There is always a question what is the difference and why on the earth I should bother about it.
Most of the time reason of the question comes because of human nature of resistance towards learning new things. And then there are people who can easily learn new things but even for them unlearning something and re-learning new things is pretty tough.</description>
    </item>
    
    <item>
      <title>To Xamarin with Love</title>
      <link>http://kunjan.in/2014/10/to-xamarin-with-love/</link>
      <pubDate>Fri, 10 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/10/to-xamarin-with-love/</guid>
      <description>Xamarin Evolve just concluded. And there no best time to write this post. And for the fact I am not writing anything new or even anything related to announcements that happened there. I am writing this because recently I got chance to work with android using Java. And experience was not at all good. And reason is not so surprisingly Java.
I am will not explain anything instead I just copy paste three code snippets.</description>
    </item>
    
    <item>
      <title>Web programming and F# still a Far Cry?</title>
      <link>http://kunjan.in/2014/10/web-programming-and-fsharp-still-a-far-cry/</link>
      <pubDate>Thu, 09 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/10/web-programming-and-fsharp-still-a-far-cry/</guid>
      <description>F# is wonderful language. And luckily or unluckily I do Web Programming (now a days mostly that). So, it is always a preference to use it, wherever possible. But even in 2014 end it is still pain in a**.
I did make templates for Servicestack and I will continue to support that. But when it comes to real projects they go far beyond templates.
I recently experimenting on something and obviously I am gonna use templates created by me.</description>
    </item>
    
    <item>
      <title>My broken marriage with C# and extramarital affair with F#</title>
      <link>http://kunjan.in/2014/06/my-broken-marriage-with-csharp-and-extramarital-affair-with-fsharp/</link>
      <pubDate>Fri, 27 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/06/my-broken-marriage-with-csharp-and-extramarital-affair-with-fsharp/</guid>
      <description>*NOTE- As per today I am neither married nor committed. And for that case never married and never committed. :P*
 Whoever is following my progress must be knowing my love for F#. Neither me nor F# knows exact time and date when that happen. But now it is like if few days I have to pass without writing few lines to(in) F# then it felt like I have left software engineering for good.</description>
    </item>
    
    <item>
      <title>SignalR &#43; Servciestack with F# hosted on Azure</title>
      <link>http://kunjan.in/2014/06/signalr-servicestack-with-fsharp-hosted-on-azure/</link>
      <pubDate>Tue, 24 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/06/signalr-servicestack-with-fsharp-hosted-on-azure/</guid>
      <description>This may be nastiest thing I have done with deployment after a long time. There is no problem with making it work. But deployment on azure is a serious issue. And luckily I completed that. Yes, there is a luck involved.
If you read my previous entry for running Nancy and SignalR together. Then most of the things are same only.
Use Servicestack template to create project. Remove global.asax &amp;amp; global.</description>
    </item>
    
    <item>
      <title>Thanks to wonderful community</title>
      <link>http://kunjan.in/2014/04/thanks-to-wonderful-community/</link>
      <pubDate>Fri, 25 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/04/thanks-to-wonderful-community/</guid>
      <description>Few days back Scott Hanselman tweeted
Take a moment, right now, and email the organizers of your favorite Open Source project and THANK THEM.
&amp;mdash; Scott Hanselman (@shanselman) April 15, 2014 
And I think, I should do that. But twitter is too short and emails boring even I don&amp;rsquo;t have email ids of few of my favourite Open Source project managers. But I am not shying away from thanking. So, I am writing this entry.</description>
    </item>
    
    <item>
      <title>SignalR &#43; Nancy with F# hosted on Azure</title>
      <link>http://kunjan.in/2014/03/signalr-nancy-with-fsharp-hosted-on-azure/</link>
      <pubDate>Fri, 28 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/03/signalr-nancy-with-fsharp-hosted-on-azure/</guid>
      <description>What you feel if you meet your favourite actor? Feeling is wonderful right? Now, add the your actress in the mixture. Have you said WOW??? How about director? Still heart is beating?!? How about having dinner with them? Nothing can be better than that.
I am having kinda same feeling. It is nothing new that Nancy is dancing quite comfortable with F#. And thanks to Daniel Mohl we are also having templates to get started with Nancy and F#.</description>
    </item>
    
    <item>
      <title>Why I moved away from Sencha to Phonejs?</title>
      <link>http://kunjan.in/2014/03/why-i-moved-away-from-sencha-to-phonejs/</link>
      <pubDate>Tue, 25 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/03/why-i-moved-away-from-sencha-to-phonejs/</guid>
      <description>Sencha is well known framework for mobile development. Not only mobile development but it is doing a hell of a lot of thing other than mobile development. Not only that it is surely having wonderful history with JavaScript framework development. I don&amp;rsquo;t have anything to complain against that.
But today I am going to talk about specifically one framework, that is Sencha Touch. I was trying to something that can developed once and deployed everywhere.</description>
    </item>
    
    <item>
      <title>Failed attempt to write series, again!</title>
      <link>http://kunjan.in/2014/03/failed-attempt-to-write-series-again/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/03/failed-attempt-to-write-series-again/</guid>
      <description>I have tried writing complete series again. And again failed. And I am stopping it again.
There are couple of reason of it. First and for most thing is I am not good at it. No where near even readable, I guess. Now, I don&amp;rsquo;t know reason specifically for that. May be I can write on specific topic better instead of things that are continues.
And that is the reason complete series thing is not that good but individual write ups are getting good reviews.</description>
    </item>
    
    <item>
      <title>Servicestack F# template. Starting from the Start</title>
      <link>http://kunjan.in/2014/02/servicestack-fsharp-template-starting-from-start/</link>
      <pubDate>Fri, 14 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/02/servicestack-fsharp-template-starting-from-start/</guid>
      <description>I have already wrote a blog post about how to get started with service stack if any one is using templates. It is pretty easy. Just install and run.
But as Service Stack is moved to V4 with some breaking changes. I had give details about updating it. But still it is little bit more complicated or confusing if I can say.
@kunjee Sure, otherwise a tutorial on getting SS v4 + F# together without templates would be better than starting from a broken v3 one.</description>
    </item>
    
    <item>
      <title>When Servicestack meet F# via Side Waffle</title>
      <link>http://kunjan.in/2014/02/when-servicestack-meet-fsharp-via-side-waffle/</link>
      <pubDate>Fri, 07 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/02/when-servicestack-meet-fsharp-via-side-waffle/</guid>
      <description>I have specific love for Servicestack and that is known thing. It is not because it is awesome or the ways it do web service things, no one else is doing. But because of my past with WCF. It is so rocky that I never want to go back. And more over Servicestack doing hell lot of the things under the cover, and that is also without doing any damn thing into XML.</description>
    </item>
    
    <item>
      <title>Getting started with Functional web</title>
      <link>http://kunjan.in/2014/02/getting-started-with-functional-web/</link>
      <pubDate>Thu, 06 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/02/getting-started-with-functional-web/</guid>
      <description>I am doing web development from quite a long time. And now a days I am keep pushing my self to do functional programming. Learning languages like Haskell, Scala, F#. Obviously I try my hand to other functional languages too as per time permits.
As I am .Net developer my primary focused is working with F# and I will also start from that only. You can also check out other functional articles of mine to check out what I think about functional programming and why it is necessity now a days.</description>
    </item>
    
    <item>
      <title>Functional Programming Need in Web Development</title>
      <link>http://kunjan.in/2013/12/functional-programming-need-in-web-development/</link>
      <pubDate>Tue, 17 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2013/12/functional-programming-need-in-web-development/</guid>
      <description>Whenever I talk about Functional Programming people with experience in web make faces. And seriously don&amp;rsquo;t blame them.
Issue is mainly Functional Programming stays in back ground only. If you see any starting example of any functional language is mainly some machine learning example or some complicated algorithm example. And that may effect normal people to getting started with Functional Programming.
But functional programming can do far more than that. And that include simple things too.</description>
    </item>
    
    <item>
      <title>Functional Programming, How I started and Why?</title>
      <link>http://kunjan.in/2013/10/functional-programming-how-i-started-and-why/</link>
      <pubDate>Thu, 24 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2013/10/functional-programming-how-i-started-and-why/</guid>
      <description>I am not kind of Technical person who started hacking / coding in very early age. But I have special love / affection towards numbers. I don&amp;rsquo;t know why but it always fascinate me.
And this was the starting point or I can say reason I started baby steps in functional programming. I like DI, not in term of Dependency Injection but in case of Data Interpretation. Those tabular data and all the graphs and details that data can produce is awesome.</description>
    </item>
    
  </channel>
</rss>