<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kunjan&#39;s Web Space</title>
    <link>http://kunjan.in/tags/functional-web/index.xml</link>
    <description>Recent content on Kunjan&#39;s Web Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://kunjan.in/tags/functional-web/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reactive Services with Servicestack and F#</title>
      <link>http://kunjan.in/2015/11/reactive-services-with-servicestack-and-fsharp/</link>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2015/11/reactive-services-with-servicestack-and-fsharp/</guid>
      <description>&lt;p&gt;Reactive word is not new nowadays. If you want your library to get limelight, use reactive word in the name any way possible and it will definitely get initial attention. Reactive word is appropriate for things that follows &lt;a href=&#34;http://www.reactivemanifesto.org/&#34;&gt;reactive manifesto&lt;/a&gt;. That is true for now. And there are many variant of libraries on server and client to fulfil this.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s start from the start of web.&lt;/p&gt;

&lt;p&gt;We were having old web were we used to do post event of page. At the time of posting whole page goes to server. And then &lt;em&gt;loading loading loading&lt;/em&gt; of the page. But after the rise of &lt;a href=&#34;https://jquery.com/&#34;&gt;JQuery&lt;/a&gt; page refresh become the thing of past. AJAX was there even before JQuery but become widely used after that only.
Now, that spinner which was there in browser tab bar / address bar came in center of page.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Side Note&lt;/strong&gt;: If you want to make ajax request faster just use a spinner &lt;strong&gt;gif&lt;/strong&gt; which spins faster. Tried and tested thing. With no code change performance issue will be resolved.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With hardware getting better and if I be more specific more connected it is easy to store lots of data. And this makes things slower eventually. And user have to wait even for ajax request. So, what is next. With &lt;a href=&#34;http://html5doctor.com/&#34;&gt;HTML5&lt;/a&gt; allowing Web Sockets and Server Events things are becoming real-time as now pushing data from Server to client is possible.&lt;/p&gt;

&lt;p&gt;Server and Client is no more one-sided love story. Now, both can send message to each other. This new change allows build more reactive system.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take example. I request my friend to come with me to visit &lt;code&gt;X&lt;/code&gt; place. I got answer &lt;code&gt;yes, will go.&lt;/code&gt; So, my request is accepted but we haven&amp;rsquo;t visited that place. Visit is still pending. After sometime we visited. So, result happen. I don&amp;rsquo;t have to ask again and again. But that event pushed by that end.&lt;/p&gt;

&lt;p&gt;Same goes for server. In post event client request for some data. But that data may or may not be available at that specific moment. So, Server can send &lt;code&gt;201 - Accepted&lt;/code&gt; status to client. So, data is accepted and waiting for processed result. And whenever result it ready server push data to client. This way neither server is blocked nor client.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is will be no need for spinner. Neither slow not fast.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://signalr.net/&#34;&gt;SignalR&lt;/a&gt; is very well-known example of real-time processing. But I wanted to achieve this by API framework. And nothing can be better than &lt;a href=&#34;https://servicestack.net/&#34;&gt;Servicestack&lt;/a&gt;. It is having Server Sent Event / Server Event support in all 4+ version. So, why not?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s jump into code. Code is in &lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt;. It is in F# for a reason and that you will know. Keep on reading.&lt;/p&gt;

&lt;p&gt;I am running a standalone Servicestack host but same code will working with Asp.net host also.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Programe.fs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module reactiveServicestack.main
open ServiceStack
open System
open ServiceStack.Logging

type AppHost() = 
    inherit AppHostHttpListenerBase (&amp;quot;Hello F# Service&amp;quot;, typeof&amp;lt;HelloService&amp;gt;.Assembly)
    override this.Configure container = 
        this.Plugins.Add(new PostmanFeature()) |&amp;gt; ignore
        this.Plugins.Add(new CorsFeature()) |&amp;gt; ignore
        this.Plugins.Add(new ServerEventsFeature()) |&amp;gt; ignore
        let serverEventsFeature = this.GetPlugin&amp;lt;ServerEventsFeature&amp;gt;() 
        printfn &amp;quot;%s&amp;quot; serverEventsFeature.StreamPath
        ignore()


[&amp;lt;EntryPoint&amp;gt;]
let main args = 
    LogManager.LogFactory &amp;lt;- new ConsoleLogFactory()
    let env_port = Environment.GetEnvironmentVariable(&amp;quot;PORT&amp;quot;)
    let port = if env_port = null then &amp;quot;1234&amp;quot; else env_port
    let host = &amp;quot;http://localhost:8080/&amp;quot;
    printfn &amp;quot;listening on %s ...&amp;quot; host
    let appHost = new AppHost()
    appHost.Init() |&amp;gt; ignore
    appHost.Start host |&amp;gt; ignore
    while true do Console.ReadLine() |&amp;gt; ignore
    0 // return an integer exit code
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above code is very much classic Servicestack. Nothing fancy here.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;HelloDto.fs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace reactiveServicestack
open System
open ServiceStack

//I can&#39;t but CLI can mutate this one
[&amp;lt;CLIMutable&amp;gt;]
type HelloResponse = { Result:string }


//There always be hello world, atleast something should be running
[&amp;lt;Route(&amp;quot;/hello&amp;quot;)&amp;gt;]
[&amp;lt;Route(&amp;quot;/hello/{name}&amp;quot;)&amp;gt;]
type Hello() =
    interface IReturn&amp;lt;HelloResponse&amp;gt;
    member val Name = &amp;quot;&amp;quot; with get, set
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again, POCO members. Hello and HelloResponse. No magic here also.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;AsyncProcessor.fs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#nowarn &amp;quot;40&amp;quot;
namespace reactiveServicestack

module SSE =
    open ServiceStack
    let private serverEvent = ServiceStackHost.Instance.Container.TryResolve&amp;lt;IServerEvents&amp;gt;()
    let NotifyAll (msg:&#39;T) = serverEvent.NotifyAll(msg)



module AsyncProcess =
    open System

    let rnd = new Random()
    let agent = 
        MailboxProcessor.Start(fun inbox -&amp;gt; 
            let rec messageLoop = 
                async {
                    let! (msg:Hello) = inbox.Receive()
                    do! Async.Sleep(3000)
                    Console.WriteLine(&amp;quot;Original &amp;quot; + msg.Name)
                    let reversed = msg.Name.ToCharArray() |&amp;gt; Array.rev |&amp;gt; fun x -&amp;gt; new String (x)
                    Console.WriteLine(&amp;quot;Reversed &amp;quot; + reversed)
                    SSE.NotifyAll({HelloResponse.Result = reversed})
                    return! messageLoop
                }
            messageLoop)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here fun starts. I am creating Actor which takes Hello typed message and NotifyAll with HelloResponse after processing name string.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s understand complicated parts.&lt;/p&gt;

&lt;p&gt;I have created SSE module because if I open Servicestack I was getting &lt;code&gt;asyncbuilder&lt;/code&gt; compile error at async keyword. And I needed to open it to expose all the extension methods. So, I wrap things up in another module.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don&amp;rsquo;t&lt;/em&gt; create seperate instance of any kind of ServerEvent implementation instead resolve it as above. Else things will surely not work. I was stuck at that problem for couple of days.&lt;/p&gt;

&lt;p&gt;Actor is very much traditional, I am reversing a string and as it is &lt;em&gt;very complex&lt;/em&gt; process. My actor will take precisely &lt;strong&gt;3&lt;/strong&gt; seconds to do it. And then I am notifying to all from actor itself.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In ideal case it should be Subscriber ID/s or Channel/s.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As, actor is async by nature it may complicate stuff to return things from agent loop. If you have used framework like &lt;a href=&#34;http://getakka.net/&#34;&gt;AKKA&lt;/a&gt; you must be knowing that &lt;code&gt;ASK&lt;/code&gt; is performance heavy in compare to &lt;code&gt;TELL&lt;/code&gt;. This way you can fire result from Actor itself.&lt;/p&gt;

&lt;p&gt;Now, you can easily guess what service will look like&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hello.fs&lt;/code&gt;
    namespace reactiveServicestack
    open ServiceStack
        open ServiceStack.Logging
        open System
        open System.Net&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    type HelloService() =
        inherit Service()
        member val serverEvents:IServerEvents = null with get, set
        member this.Get (request:Hello) = 
            {Result = &amp;quot;Hello &amp;quot; + request.Name}
        member this.Post (request: Hello) =
            AsyncProcess.agent.Post(request)
            HttpStatusCode.Accepted
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And final piece of puzzle &lt;strong&gt;HTML&lt;/strong&gt;
&lt;code&gt;default.html&lt;/code&gt;
    &lt;html&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Reactive Servicestack&amp;lt;/title&amp;gt;
    &amp;lt;link href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.css&amp;quot; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;Hello this is default page&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt;Enter Your name&amp;lt;/label&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;name&amp;quot; value=&amp;quot;&amp;quot; /&amp;gt;
        &amp;lt;button id=&amp;quot;reverse&amp;quot;&amp;gt;Reverse&amp;lt;/button&amp;gt;
        &amp;lt;ul&amp;gt;

        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script src=&amp;quot;//code.jquery.com/jquery-2.1.4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;/js/ss-utils.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        $(&#39;#name&#39;).keypress(function (e) {
            var key = e.which;
            if(key == 13)  // the enter key code
            {
                $(&#39;#reverse&#39;).click();
                $(&#39;#name&#39;).val(&#39;&#39;);
                return false;  
            }
        }); 
        $(&#39;#reverse&#39;).click(function(e) {
            e.preventDefault();
            var name = $(&#39;#name&#39;).val();

            if (name != &#39;&#39; || name != undefined) {
                $.post(&#39;/hello&#39;, {
                        name: name
                    })
                    .done(function() {
                        toastr.success(name + &#39; is very much Accepted!&#39;)
                    });
            }
        });
        var addName = function(reversedName) {
            $(&#39;ul&#39;).append(&#39;&amp;lt;li&amp;gt;&#39; + reversedName + &#39;&amp;lt;/li&amp;gt;&#39;);
        };
        var channel = &#39;home&#39;;
        var eventSource = new EventSource(&#39;/event-stream?channel=home&amp;amp;t=&#39; + new Date().getTime());
        $(eventSource).handleServerEvents({
            handlers: {
                HelloResponse: function(msg) {
                        console.log(msg);
                        addName(msg.Result);
                    }
                    //... Register custom handlers
            }
        });

    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am taking post request and returning &lt;code&gt;201-accepted&lt;/code&gt; instead of &lt;code&gt;200-ok&lt;/code&gt; from server. On client it will go in &lt;code&gt;success&lt;/code&gt; callback only.&lt;/p&gt;

&lt;p&gt;This way we can easily decouple server and client. And this can be used for games, stock market, betting or other reactive systems.&lt;/p&gt;

&lt;p&gt;I am not going in detail of Actor or AKKA but as it natively available in F# so I used it. One of the reason beside being more fun while writing code.&lt;/p&gt;

&lt;p&gt;Please provide your input for this. I don&amp;rsquo;t know this is right / wrong or can&amp;rsquo;t say. But it is very much possible that using current technology even without enabling Web Sockets (&lt;em&gt;Most of the cloud provider supports web sockets&lt;/em&gt;) one can create reactive web services.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S. - With this there will be no need for spinner at all.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Typed Hack of Cloudant using F#</title>
      <link>http://kunjan.in/2014/11/typed-hack-of-cloudant-using-fsharp/</link>
      <pubDate>Fri, 28 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/11/typed-hack-of-cloudant-using-fsharp/</guid>
      <description>&lt;p&gt;There is a continues war between typed and untyped data. But then there is need of finding a middle ground for ever growing application. There is place, a requirement when I feel application should be typed and data store should be untyped. So, I created this little code snippet to access cloudant (a couchbase fork) NOSQL database.&lt;/p&gt;

&lt;p&gt;I was knowing about &lt;a href=&#34;http://cloudant.com&#34;&gt;Cloudant&lt;/a&gt; from long back. Even before IBM bought it. It is indeed a wonderful service and also kinda free for small stuff. I thought this will be best fit for now. (I still don&amp;rsquo;t know why I didn&amp;rsquo;t use Mongodb).&lt;/p&gt;

&lt;p&gt;As there is no need of scary relations ships with database. So, I decided to use this one.&lt;/p&gt;

&lt;p&gt;Now as one problem is solved other started. It is saving data that is in JSON format. That is untyped and F# is statically typed. I have tried few libraries developed in C# but was not happy. So, I thought it is just a HTTP request, why shouldn&amp;rsquo;t I give it as shot to make one of my own helper module? It is may be some what dirty attempt but I got it working what I needed with less than 100 lines. Here is code snippets.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#r &amp;quot;../packages/Http.fs.1.4.0/lib/net40/HttpClient.dll&amp;quot;
#r &amp;quot;../packages/Newtonsoft.Json.6.0.6/lib/net45/Newtonsoft.Json.dll&amp;quot;

open HttpClient
open Newtonsoft.Json
open Newtonsoft.Json.Linq

[&amp;lt;CLIMutableAttribute&amp;gt;]
type Row&amp;lt;&#39;a&amp;gt; = 
    { id : string
      key : string
      value : &#39;a }

[&amp;lt;CLIMutableAttribute&amp;gt;]
type ResultSet&amp;lt;&#39;a&amp;gt; = 
    { total_rows : int
      offset : int
      rows : Row&amp;lt;&#39;a&amp;gt; [] }

[&amp;lt;CLIMutableAttribute&amp;gt;]
type PostResult = 
    { ok : string
      id : string
      rev : string }

[&amp;lt;CLIMutableAttribute&amp;gt;]
type PostError = 
    { error : string
      reason : string }

let cloudantUrl = @&amp;quot;&amp;lt;cloudanturl/databasename/&amp;gt;&amp;quot;
let username = @&amp;quot;&amp;lt;username&amp;gt;&amp;quot;
let password = @&amp;quot;&amp;lt;password&amp;gt;&amp;quot;

let private cloudantGet url = 
    let request = 
        createRequest Get url
        |&amp;gt; withBasicAuthentication username password
        |&amp;gt; withHeader (ContentType &amp;quot;application/json&amp;quot;)
    request |&amp;gt; getResponseBody

let private cloudantPost url data = 
    let request = 
        createRequest Post url
        |&amp;gt; withBasicAuthentication username password
        |&amp;gt; withBody data
        |&amp;gt; withHeader (ContentType &amp;quot;application/json&amp;quot;)
    request |&amp;gt; getResponseBody

let private checkDataForNewId (data : JObject) = 
    let removeIdrev (data : JObject) = 
        data.Remove(&amp;quot;_id&amp;quot;) |&amp;gt; ignore
        data.Remove(&amp;quot;_rev&amp;quot;) |&amp;gt; ignore
    if System.String.IsNullOrEmpty(data.[&amp;quot;_id&amp;quot;].ToString()) || System.String.IsNullOrEmpty(data.[&amp;quot;_rev&amp;quot;].ToString()) then 
        removeIdrev data
    data

let PostJson&amp;lt;&#39;a&amp;gt; data = 
    let serializedObject = JObject.FromObject(data) |&amp;gt; checkDataForNewId
    serializedObject.Add(&amp;quot;$doctype&amp;quot;, JToken.Parse(&amp;quot;&#39;&amp;quot; + data.GetType().Name + &amp;quot;&#39;&amp;quot;))
    cloudantPost cloudantUrl &amp;lt;| serializedObject.ToString()

let GetJsonByType&amp;lt;&#39;a&amp;gt; = 
    let resultset = 
        JsonConvert.DeserializeObject&amp;lt;ResultSet&amp;lt;&#39;a&amp;gt;&amp;gt;
            (cloudantGet (cloudantUrl + &amp;quot;/_design/Type/_view/&amp;quot; + typeof&amp;lt;&#39;a&amp;gt;.Name))
    query { 
        for row in resultset.rows do
            select row.value
    }

let GetJsonById&amp;lt;&#39;a&amp;gt; Id = JsonConvert.DeserializeObject&amp;lt;&#39;a&amp;gt;(cloudantGet (cloudantUrl + Id))

[&amp;lt;CLIMutableAttribute&amp;gt;]
type Person = 
    { _id : string
      _rev : string
      FirstName : string
      LastName : string }

let newPerson = 
    { _id = &amp;quot;&amp;quot;
      _rev = &amp;quot;&amp;quot;
      FirstName = &amp;quot;Boom&amp;quot;
      LastName = &amp;quot;Baam&amp;quot; }

let inline isNull (x:^a when ^a : not struct) =
    obj.ReferenceEquals (x, Unchecked.defaultof&amp;lt;_&amp;gt;)

let findPerson = 
    query { 
        for p in GetJsonByType&amp;lt;Person&amp;gt; do
            where (p.FirstName = &amp;quot;Boom&amp;quot;)
            select p
            headOrDefault
            }
isNull findPerson    
GetJsonById&amp;lt;Person&amp;gt; (&amp;quot;3b389dc6b8ee0dcbf7f366faaa59cf42&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In above code below part is just for testing. And even with that code snippet is 98 lines. So, with blank line removed it is even short.&lt;/p&gt;

&lt;p&gt;Now, in cloudant I need to create views so its code is like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function(doc) {
    if (doc.$doctype !== &amp;quot;Person&amp;quot;) return;
    var copydoc = JSON.parse(JSON.stringify(doc));
    delete copydoc[&amp;quot;$doctype&amp;quot;];
    emit(doc._id,copydoc);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I need &lt;code&gt;$doctype&lt;/code&gt; while I am inserting or updating data only, not while reading. So, I am removing it. As I am already filtering based on type.&lt;/p&gt;

&lt;p&gt;In above code two libraries are getting used one is &lt;a href=&#34;https://github.com/relentless/Http.fs&#34;&gt;Http.fs&lt;/a&gt; and the other is &lt;a href=&#34;http://james.newtonking.com/json&#34;&gt;JSON.net&lt;/a&gt; libraries.&lt;/p&gt;

&lt;p&gt;In library as you can see I am not doing anything special. I am inserting data with type information. If new data is there I am removing &lt;code&gt;_id&lt;/code&gt; and &lt;code&gt;_rev&lt;/code&gt; and for simplicity sake I had put &lt;code&gt;_id&lt;/code&gt; and &lt;code&gt;_rev&lt;/code&gt; in all the types I am using to interacting with Cloudant data store.&lt;/p&gt;

&lt;p&gt;So, now whenever I am reading I just need to give type and that will be fetched as collection of that typed records. And once collection came to memory now I have powerful F# to process data. In above code I am using &lt;code&gt;query&lt;/code&gt; expression to do so. It becomes very easy and fun to use. And it is damn fast. At least for now.&lt;/p&gt;

&lt;p&gt;Now, I don&amp;rsquo;t know it if perfect or not. It kinda part functional and part Object Oriented as far as I know. Should I convert this to Type Provider or is it possible or not? I don&amp;rsquo;t know. But one thing is sure I am achieving what I wanted with simplest possible code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dear F# community members&lt;/strong&gt; do provide your views on this. And also let me know if it will be use full to make it more mature and push it as nuget package. Or may be a type provider for Cloudant?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Highly inspired by &lt;a href=&#34;https://twitter.com/dmohl&#34;&gt;Daniel Mohl&amp;rsquo;s&lt;/a&gt; old library &lt;a href=&#34;https://github.com/dmohl/FSharpCouch&#34;&gt;FSharpCouch&lt;/a&gt;. Thank you&amp;hellip; :)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Web programming and F# still a Far Cry?</title>
      <link>http://kunjan.in/2014/10/web-programming-and-fsharp-still-a-far-cry/</link>
      <pubDate>Thu, 09 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/10/web-programming-and-fsharp-still-a-far-cry/</guid>
      <description>&lt;p&gt;F# is wonderful language. And luckily or unluckily I do Web Programming (now a  days mostly that). So, it is always a preference to use it, wherever possible. But even in 2014 end it is still pain in a**.&lt;/p&gt;

&lt;p&gt;I did make templates for &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/278caff1-917a-4ac1-a552-e5a2ce0f6e1f&#34;&gt;Servicestack&lt;/a&gt; and I will continue to support that. But when it comes to real projects they go far beyond templates.&lt;/p&gt;

&lt;p&gt;I recently experimenting on something and obviously I am gonna use templates created by me. I created project and ran it. &lt;em&gt;Luckily&lt;/em&gt; it ran without any issue. And then I fire nuget update. &lt;strong&gt;Bang!!!&lt;/strong&gt; Nuget update reverted with the error of &lt;code&gt;object reference not found&lt;/code&gt;. I tried to find solution but failed. Then I tried same thing with &lt;a href=&#34;https://visualstudiogallery.msdn.microsoft.com/5bd40817-0986-444d-a77d-482e43a48da7&#34;&gt;Servicestack&lt;/a&gt; official templates. It worked once and then failed again.&lt;/p&gt;

&lt;p&gt;I thought there is a issue with nuget or updated &lt;a href=&#34;http://blogs.msdn.com/b/fsharpteam/archive/2014/08/20/announcing-the-release-of-visual-f-tools-3-1-2.aspx&#34;&gt;tool chain of F#&lt;/a&gt;. God only knows. So, I checked other ways of updating packages.&lt;/p&gt;

&lt;p&gt;I knew about &lt;a href=&#34;http://fsprojects.github.io/Paket/&#34;&gt;paket&lt;/a&gt;. Either due to some bug or feature it just worked for start. Then I added &lt;a href=&#34;http://emberjs.com/&#34;&gt;emberjs&lt;/a&gt; via &lt;a href=&#34;http://www.nuget.org/packages/EmberJS/&#34;&gt;nuget package&lt;/a&gt;. And got folder render error. Which is very &lt;em&gt;typical&lt;/em&gt; to F# projects. I know how to solve it. I normally always keep F# project file open in different text editor for this kinda issues. So, I move few include line here and there to keep same folder in order and solve the issue. Then I added few more JS libs and paket install gives same issue again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kunjan.in/images/double_facepalm.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now, all these issues were not enough that azure deployment is not completed without a little hack I have mentioned in my previous &lt;a href=&#34;http://kunjan.in/2014/03/signalr-nancy-azure-with-fsharp/&#34;&gt;blog&lt;/a&gt;. For the face last update should solved this issue but it is not working. May be feature is not completed or may be it is just me.&lt;/p&gt;

&lt;p&gt;And above complete exercise took more than 7 hours and I deleted and added project more than 5 times just to make it work. Just to make the damn &lt;strong&gt;&lt;em&gt;Hello World&lt;/em&gt;&lt;/strong&gt; work. That is it. Nothing more and nothing less. I was exactly feeling like &lt;img src=&#34;http://kunjan.in/images/rockypunched.jpeg&#34; alt=&#34;&#34; /&gt;.&lt;/p&gt;

&lt;p&gt;After that I changed project structure again and put a C# project as front and F# as library project. Just to make nuget happy. And also the Azure happy. As I don&amp;rsquo;t want to mess around project files and want to write some code. I guess that is more important then hacking around tool chain.&lt;/p&gt;

&lt;p&gt;I know F# is far ahead of its time. It is a next gen language. But it is also a old enough language to have proper visual studio support. It should be supported and loved as any other language on .Net framework. At least from the tool chain point of view. I can always have work around but writing code in pure project in single language is always a fun.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please let me if I missed anything. Or making mistake on my side.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Things are improving fast and hopefully it will be at the same level where all language can find common ground. Hoping and waiting for &lt;a href=&#34;http://www.asp.net/vnext&#34;&gt;VNext&lt;/a&gt; support now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My broken marriage with C# and extramarital affair with F#</title>
      <link>http://kunjan.in/2014/06/my-broken-marriage-with-csharp-and-extramarital-affair-with-fsharp/</link>
      <pubDate>Fri, 27 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/06/my-broken-marriage-with-csharp-and-extramarital-affair-with-fsharp/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;*&lt;strong&gt;NOTE&lt;/strong&gt;- As per today I am neither married nor committed. And for that case never married and never committed. :P*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Whoever is following my progress must be knowing my love for F#. Neither me nor F# knows exact time and date when that happen. But now it is like if few days I have to pass without writing few lines to(in) F# then it felt like I have left software engineering for good.&lt;/p&gt;

&lt;p&gt;I am full time married to C#. My heart and soul still bleed for it. Still I am following &lt;a href=&#34;https://twitter.com/jonskeet&#34;&gt;Jon Skeet&lt;/a&gt;. Still I am updating my self. But truly speaking; that enigma, that love, that emotions are lost. And final blow comes when I don&amp;rsquo;t have to see C# on daily basis.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My profile changed at my day job. Can&amp;rsquo;t share all the details though but it is not C#.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our shared time is getting less day by day. And even that less time getting consumed by newly found adventures with F#.&lt;/p&gt;

&lt;p&gt;I still remember a day when I visited it on &lt;a href=&#34;http://tryfsharp.org/&#34;&gt;TryFsharp&lt;/a&gt;. And my first impression was &amp;lsquo;OK&amp;rsquo;. But then slowly it started getting into me. Then more meeting happens at &lt;a href=&#34;http://fsharp.org/&#34;&gt;fsharp.org&lt;/a&gt;. Can&amp;rsquo;t say anyone but just for F# I gave request to become a &lt;a href=&#34;http://fsharp.org/foundation.html#founding_members&#34;&gt;member of fsharp.org&lt;/a&gt; and luckily got accepted. Meetings became more often, is it love? I didn&amp;rsquo;t know at that time.&lt;/p&gt;

&lt;p&gt;But then something happen. I started burning midnight oil for F# and one day god answers my desire less efforts and first time I run F# code on &lt;a href=&#34;http://servicestackheroku.herokuapp.com/&#34;&gt;Heroku&lt;/a&gt;.  I felt the first blink of love. And love got confirmation when my name got place at &lt;a href=&#34;http://fsharp.org/guides/web/&#34;&gt;fsharp.org&lt;/a&gt; with F#.&lt;/p&gt;

&lt;p&gt;After that there was no looking back, there were just milestones for a bonding that is getting stronger with every obstacle conquered. It includes my first community check in for &lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/278caff1-917a-4ac1-a552-e5a2ce0f6e1f&#34;&gt;visual studio template&lt;/a&gt;, my first experience of porting &lt;a href=&#34;2014/03/signalr-nancy-azure-with-fsharp/&#34;&gt;Signalr and Nancy on azure&lt;/a&gt; and lately porting &lt;a href=&#34;http://kunjan.in/2014/06/signalr-servicestack-azure-with-fsharp/&#34;&gt;servicestack with SignalR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is never one sided. Whenever I have lots of data I have F#, whenever I have complicated (or not that complicated) algorithm I have F#. I want to do mobile I have F#, I want to make game &lt;em&gt;again&lt;/em&gt; I have F#.&lt;/p&gt;

&lt;p&gt;It is not that it is the only one but for me it is the one. So, simple, elegant, sweet, graceful and still so powerful. And never demanded anything, it just work on any platform.&lt;/p&gt;

&lt;p&gt;So, all is good. I can&amp;rsquo;t say so. I am still married to C#; my resume says so. I am still having same respect that I was having long back but may be that love is lost. I don&amp;rsquo;t know whose fault it is; may be me may be F#. But things that stays is less fun and more friction.&lt;/p&gt;

&lt;p&gt;There are few things that only C# can do, few places like &lt;a href=&#34;http://azure.microsoft.com/&#34;&gt;Azure&lt;/a&gt; only C# can go without any issues. It is not that I wanted to get separated but sometimes at some places it is not the best possible choice.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t know how far I can go with C# but my love for F# is reality. If I am continuing in software industry and if my choice will be granted, my first choice will F# as of now and may be for few more years to come.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: I still follow C# and quite good with it but if I get choice I will always go with F#. I just want that F# get same respect and love from business line of Microsoft Products. As things are changing in positive direction hopefully that day is not too far.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>SignalR &#43; Servciestack with F# hosted on Azure</title>
      <link>http://kunjan.in/2014/06/signalr-servicestack-with-fsharp-hosted-on-azure/</link>
      <pubDate>Tue, 24 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/06/signalr-servicestack-with-fsharp-hosted-on-azure/</guid>
      <description>&lt;p&gt;This may be nastiest thing I have done with deployment after a long time. There is no problem with making it work. But deployment on azure is a serious issue. And &lt;strong&gt;luckily&lt;/strong&gt; I completed that. Yes, there is a luck involved.&lt;/p&gt;

&lt;p&gt;If you read my previous &lt;a href=&#34;http://kunjan.in/2014/03/signalr-nancy-azure-with-fsharp/&#34;&gt;entry&lt;/a&gt; for running Nancy and SignalR together. Then most of the things are same only.&lt;/p&gt;

&lt;p&gt;Use &lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/278caff1-917a-4ac1-a552-e5a2ce0f6e1f&#34;&gt;Servicestack template&lt;/a&gt; to create project. Remove global.asax &amp;amp; global.asax.fs (&lt;em&gt;yes remove it!&lt;/em&gt;). Install SignalR asp.net package from &lt;a href=&#34;www.nuget.org/packages/Microsoft.AspNet.SignalR/&#34;&gt;nuget&lt;/a&gt;. And copy paste below code in AppCode.fs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace ServicestackSignalRFSharp.App_Start
    open ServiceStack
    open ServiceStack.Common
    open ServicestackSignalRFSharp
    open ServiceStack.Razor
    open System
    open Owin


    type AppHost() = 
        inherit AppHostBase(&amp;quot;Hello F# Service&amp;quot;, 
                                        typeof&amp;lt;HelloService&amp;gt;.Assembly)
        override this.Configure container =
            Diagnostics.Trace.TraceError(&amp;quot;In servicestack configure&amp;quot;);
            this.Plugins.Add(new RazorFormat())
            ignore()


        static member start() = 
            let apphost = new AppHost()
            Diagnostics.Trace.TraceError(&amp;quot;In servicestack start&amp;quot;);
            apphost.Init() |&amp;gt; ignore

    type Startup()=
        member x.Configuration(app : Owin.IAppBuilder) = 
            AppHost.start()
            Diagnostics.Trace.TraceError(&amp;quot;In signalr startup&amp;quot;);
            app.MapSignalR() |&amp;gt; ignore        


    [&amp;lt;Microsoft.Owin.OwinStartup(typeof&amp;lt;Startup&amp;gt;)&amp;gt;]
    do ()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Don&amp;rsquo;t forget to rename the namespace as per your project namespace.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As per my Nancy article changed the index.cshtml to get signalR client running. Once done run it. It should work hello world of &lt;a href=&#34;http://servicestack.net&#34;&gt;Servicestack&lt;/a&gt; and Hello Chat from &lt;a href=&#34;http://signalr.net&#34;&gt;SignalR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If things still not work here is my &lt;a href=&#34;https://github.com/kunjee17/ServicestackSignalRFSharp/&#34;&gt;github repo&lt;/a&gt;. Have a look at code. And also it is deployed over &lt;a href=&#34;http://servicestacksignalrfsharp.azurewebsites.net/&#34;&gt;azure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;###My Personal Experience###
One thing I like to clear it upfront. Even though I was able to run Servicestack and SignalR together but they are still running differently under the hood. Servicestack is hitting asp.net directly and signalR is hitting via &lt;a href=&#34;http://owin.org/&#34;&gt;OWIN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am also not making web service real time. It is just both can easily run together. Making them run together was easy task. But deploying on azure is a serious pain in a**.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yes, azure is. It is so damn easy to deploy traditional imperative C# project as azure web site but functional F# project. It is like giving death by a thousand cuts. You solve one issue and another issue came. Just like &lt;em&gt;pipeline&lt;/em&gt; operator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is more like whatever F# is compensating by making development easy, deployment is making it even.&lt;/p&gt;

&lt;p&gt;That is the same with above code. global.asax.fs is working in local, I can even put a break point but it is not working on azure. I put a trace in every possible function and at last find out. (Special thanks to &lt;a href=&#34;https://twitter.com/demisbellot&#34;&gt;Demis Bellot&lt;/a&gt; for pointing out this possible issue.)&lt;/p&gt;

&lt;p&gt;Even though F# is picking up new height, and I personally contributed and will continue to contribute in templates. But if someone want to take full advantage of F# in web development &lt;strong&gt;&lt;em&gt;today&lt;/em&gt;&lt;/strong&gt; with cloud then s/he need to make one C# project and point F# to them. Just to get best of both worlds.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yes, C# is still far better when it comes to csproj file. o_O&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As usual working with functional language is always fun experience and now we have web service that we can scale with real time icing.&lt;/p&gt;

&lt;p&gt;So, now.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Servicestack |&amp;gt; Razor |&amp;gt; SignalR |&amp;gt; Azure (with little hiccups) |&amp;gt; F# |&amp;gt; lots of love.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>SignalR &#43; Nancy with F# hosted on Azure</title>
      <link>http://kunjan.in/2014/03/signalr-nancy-with-fsharp-hosted-on-azure/</link>
      <pubDate>Fri, 28 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/03/signalr-nancy-with-fsharp-hosted-on-azure/</guid>
      <description>&lt;p&gt;What you feel if you meet your favourite actor? Feeling is wonderful right? Now, add the your actress in the mixture. Have you said WOW??? How about director? Still heart is beating?!? How about having dinner with them? Nothing can be better than that.&lt;/p&gt;

&lt;p&gt;I am having kinda same feeling. It is nothing new that &lt;a href=&#34;http://nancyfx.org/&#34;&gt;Nancy&lt;/a&gt; is dancing quite comfortable with &lt;a href=&#34;http://fsharp.org&#34;&gt;F#&lt;/a&gt;. And thanks to Daniel Mohl we are also having &lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/b55b8aac-b11a-4a6a-8a77-2153f46f4e2f&#34;&gt;templates&lt;/a&gt; to get started with Nancy and F#.&lt;/p&gt;

&lt;p&gt;Now, I was doing some experiments around it. It was quite good. But how about running it on Owin. hmmm, it works flow less. Nothing more on code side other than few lines here and there. Then I found few projects running &lt;a href=&#34;http://signalr.net/&#34;&gt;SignalR&lt;/a&gt; with F#.&lt;/p&gt;

&lt;p&gt;I knowing Nancy from a long time. But SignalR, I don&amp;rsquo;t know anything about it. The only thing I know is that, it is super awesome.&lt;/p&gt;

&lt;p&gt;So, first task is to run Nancy on Owin.&lt;/p&gt;

&lt;p&gt;Here are simple steps. Using template create a asp.net host with razor project. remove asp.net host and add &lt;a href=&#34;http://www.nuget.org/packages/Nancy.Owin/&#34;&gt;Owin host&lt;/a&gt; using nuget package manager.&lt;/p&gt;

&lt;p&gt;Now we need to add startup file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type Startup() = 
    member x.Configuration(app : Owin.IAppBuilder) =  app.UseNancy() |&amp;gt; ignore


[&amp;lt;Microsoft.Owin.OwinStartup(typeof&amp;lt;Startup&amp;gt;)&amp;gt;]
do ()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add simple Nancy code. The regular one. Nothing fancy.&lt;/p&gt;

&lt;p&gt;There is bootstrap class&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type Bootstrapper() =
    inherit DefaultNancyBootstrapper()
    override x.ApplicationStartup(container:TinyIoCContainer, pipelines:IPipelines) = 
        StaticConfiguration.DisableErrorTraces &amp;lt;- false
        base.ApplicationStartup(container,pipelines)
        ignore()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;this is needed to trace the error if anything is there at nancy end.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And our index module&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type IndexModule() as x =
    inherit NancyModule()
    do x.Get.[&amp;quot;/&amp;quot;] &amp;lt;- fun _ -&amp;gt; box x.View.[&amp;quot;Index&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pretty lame right. But it works.&lt;/p&gt;

&lt;p&gt;Now, add &lt;a href=&#34;http://www.nuget.org/packages/Microsoft.AspNet.SignalR/&#34;&gt;Signalr asp.net host nuget package&lt;/a&gt; to project. As startup file is already there; no need to create one more. Just minor modification will do.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type Startup() = 
    member x.Configuration(app : Owin.IAppBuilder) =  app.MapSignalR().UseNancy() |&amp;gt; ignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That MapSignalR thing is additionally added. I have just followed Hello World example of real time world. Create a chat application. So, here is the hub to broadcast the message to all users.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type ChatHub() as this = 
    inherit Hub()
    member x.send (name : string, msg : string) = this.Clients.All?broadcastMessage (name, msg) |&amp;gt; ignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, copy paste code for html part. Here is code snippet. There is no need to go into detail as of now for JavaScript part.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;
    &amp;lt;p&amp;gt;Here is singnal R working great with Nancy&amp;lt;/p&amp;gt;
    &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;message&amp;quot; /&amp;gt;
        &amp;lt;input type=&amp;quot;button&amp;quot; id=&amp;quot;sendmessage&amp;quot; value=&amp;quot;Send&amp;quot; /&amp;gt;
        &amp;lt;input type=&amp;quot;hidden&amp;quot; id=&amp;quot;displayname&amp;quot; /&amp;gt;
        &amp;lt;ul id=&amp;quot;discussion&amp;quot;&amp;gt;&amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&amp;lt;!--Script references. --&amp;gt;
&amp;lt;!--Reference the jQuery library. --&amp;gt;
&amp;lt;script src=&amp;quot;Scripts/jquery-1.6.4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!--Reference the SignalR library. --&amp;gt;
&amp;lt;script src=&amp;quot;Scripts/jquery.signalR-2.0.2.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!--Reference the autogenerated SignalR hub script. --&amp;gt;
&amp;lt;script src=&amp;quot;signalr/hubs&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!--Add script to update the page and send messages.--&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    $(function () {
        // Declare a proxy to reference the hub.
        var chat = $.connection.chatHub;
        // Create a function that the hub can call to broadcast messages.
        chat.client.broadcastMessage = function (name, msg) {
            // Html encode display name and message.

            var encodedName = $(&#39;&amp;lt;div /&amp;gt;&#39;).text(name).html();
            var encodedMsg = $(&#39;&amp;lt;div /&amp;gt;&#39;).text(msg).html();
            // Add the message to the page.
            $(&#39;#discussion&#39;).append(&#39;&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&#39; + encodedName
                + &#39;&amp;lt;/strong&amp;gt;:&amp;amp;nbsp;&amp;amp;nbsp;&#39; + encodedMsg + &#39;&amp;lt;/li&amp;gt;&#39;);
        };
        // Get the user name and store it to prepend to messages.
        $(&#39;#displayname&#39;).val(prompt(&#39;Enter your name:&#39;, &#39;&#39;));
        // Set initial focus to message input box.
        $(&#39;#message&#39;).focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $(&#39;#sendmessage&#39;).click(function () {
                // Call the Send method on the hub.
                chat.server.send($(&#39;#displayname&#39;).val(), $(&#39;#message&#39;).val());
                // Clear text box and reset focus for next comment.
                $(&#39;#message&#39;).val(&#39;&#39;).focus();
            });
        });
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, there is one &amp;ldquo;?&amp;rdquo; thing before broadcastMessage function. That is where dynamic method is getting called. F# do not support dynamic by default but there are many work around available. I personally prefer &lt;a href=&#34;http://www.nuget.org/packages/FSharp.Dynamic/&#34;&gt;Fsharp.dynamic&lt;/a&gt; library. It is better than other code snippets I found over other sites. But that is all personal choice how one like to handle dynamic functions.&lt;/p&gt;

&lt;p&gt;So, it is done. Hit F5 and you are ready to go.&lt;/p&gt;

&lt;p&gt;What is fun of working with Web if I can&amp;rsquo;t publish it. But for now with F# web templates it is not possible. And that is known &lt;a href=&#34;https://github.com/fsharp/FSharpCommunityTemplates/issues/28&#34;&gt;issue&lt;/a&gt;. So, if I like to publish it on cloud like azure I need to give git hooks. That is easiest thing I can think off. But road is still not that smooth.&lt;/p&gt;

&lt;p&gt;Deployment will break with some weird error. I followed &lt;a href=&#34;http://blog.ploeh.dk/2013/08/26/running-a-pure-f-web-api-on-azure-web-sites/&#34;&gt;Mark&amp;rsquo;s article&lt;/a&gt; to make it work.&lt;/p&gt;

&lt;p&gt;Needed to add below lines to .fsproj file after its own import tags.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Import Project=&amp;quot;$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets&amp;quot; 
        Condition=&amp;quot;&#39;$(VSToolsPath)&#39; != &#39;&#39;&amp;quot; /&amp;gt;
&amp;lt;Import Project=&amp;quot;$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v11.0\WebApplications\Microsoft.WebApplication.targets&amp;quot; 
        Condition=&amp;quot;true&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And things are working like anything. No, issues at all.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nancy |&amp;gt; Razor |&amp;gt; SignalR |&amp;gt; Azure |&amp;gt; F# |&amp;gt; lots of love.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please give it a shot. If it break somewhere let me know will try to solve it. Any suggestion to make things even better and streamlined are always welcome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; Here is my &lt;a href=&#34;https://github.com/kunjee17/NancySignalRFSharp&#34;&gt;github repo&lt;/a&gt; with updated code. Project created with web express 2013. Also it is deployed over &lt;a href=&#34;http://nancysignalrfsharp.azurewebsites.net/&#34;&gt;azure&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Failed attempt to write series, again!</title>
      <link>http://kunjan.in/2014/03/failed-attempt-to-write-series-again/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/03/failed-attempt-to-write-series-again/</guid>
      <description>&lt;p&gt;I have tried writing complete series again. And again failed. And I am stopping it again.&lt;/p&gt;

&lt;p&gt;There are couple of reason of it. First and for most thing is I am not good at it. No where near even readable, I guess. Now, I don&amp;rsquo;t know reason specifically for that. May be I can write on specific topic better instead of things that are continues.&lt;/p&gt;

&lt;p&gt;And that is the reason complete series thing is not that good but individual write ups are getting good reviews.&lt;/p&gt;

&lt;p&gt;There is one more things. Few things are just very random that can&amp;rsquo;t fit in series at all. Few days back I was trying to run SignalR with F#. I succeeded but that will not fit here. Before that there was article about &lt;a href=&#34;2014/02/servicestack-fsharp-template-starting-from-start/&#34;&gt;getting started with Servicestack&lt;/a&gt; from very zero. And that also can&amp;rsquo;t fit here.&lt;/p&gt;

&lt;p&gt;So, I finally though to kill it for while. Because of this I couldn&amp;rsquo;t able to write few other things I like to write. I am putting this in this series as completely non-technical part.&lt;/p&gt;

&lt;p&gt;There will be more articles about web, game and F# but not in series form.&lt;/p&gt;

&lt;p&gt;So, wait for next one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When Servicestack meet F# via Side Waffle</title>
      <link>http://kunjan.in/2014/02/when-servicestack-meet-fsharp-via-side-waffle/</link>
      <pubDate>Fri, 07 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/02/when-servicestack-meet-fsharp-via-side-waffle/</guid>
      <description>&lt;p&gt;I have specific love for &lt;a href=&#34;http://servicestack.net/&#34;&gt;Servicestack&lt;/a&gt; and that is known thing. It is not because it is awesome or the ways it do web service things, no one else is doing. But because of my past with WCF. It is so rocky that I never want to go back.  And more over &lt;a href=&#34;http://servicestack.net/&#34;&gt;Servicestack&lt;/a&gt; doing hell lot of the things under the cover, and that is also without doing any damn thing into &lt;strong&gt;XML&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hell, yes.. No XML&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ok, I can write on and on for &lt;a href=&#34;http://servicestack.net/&#34;&gt;Servicestack&lt;/a&gt; but for now it is not the topic. Topic is about &lt;a href=&#34;http://www.hanselman.com/blog/YakShavingDefinedIllGetThatDoneAsSoonAsIShaveThisYak.aspx&#34;&gt;Shaving the Yak&lt;/a&gt;. There are many hatters of Visual Studio and its project file. I also don&amp;rsquo;t mind sometimes joining the league. But for most of the cases it is doing many things, that we need to do otherwise.&lt;/p&gt;

&lt;p&gt;And I am saying this because I have done this while creating templates for  &lt;a href=&#34;http://servicestack.net/&#34;&gt;Servicestack&lt;/a&gt;. My first experience is damn flow less.&lt;/p&gt;

&lt;p&gt;I created one sample application and &lt;a href=&#34;http://blog.danielmohl.com/&#34;&gt;Daniel Mohl&lt;/a&gt; did the mojo jojo part. And template is up and running. But after that he was little bit busy with day job so I got that task. And first challenge was to run &lt;a href=&#34;http://servicestack.net/&#34;&gt;Servicestack&lt;/a&gt; with F#. Console application is pretty easy as I have done it &lt;a href=&#34;https://github.com/kunjee17/ServiceStackHeroku&#34;&gt;earlier too&lt;/a&gt; and deployed it to &lt;a href=&#34;http://servicestackheroku.herokuapp.com/&#34;&gt;Heroku&lt;/a&gt;. But with Asp.Net it was giving weird issue. After struggling for two weeks and asking community over twitter, I got answer from &lt;a href=&#34;http://stackoverflow.com/questions/21213363/servicestack-razor-page-is-getting-added-to-content&#34;&gt;stackoverflow&lt;/a&gt;. Damn silly mistake. I copy pasted code from self host and that is spinning up two server. Once solved I was so happy.&lt;/p&gt;

&lt;p&gt;But next thing is waiting for me is to make is template. I was having no idea how to do that. Other than I was having link where to give pull request. At this point &lt;a href=&#34;http://sidewaffle.com/&#34;&gt;Side Waffle&lt;/a&gt; came to rescue. Just a 5 minutes video and you are done.&lt;/p&gt;

&lt;p&gt;Ok, I do got some hiccups, like I was unable to created project at first. But then I did &lt;em&gt;hacking&lt;/em&gt; , lamest one. Did copy paste of other working project, removed their data and insert mine. And it was working.  Obviously this was not the best way but for now it is working. And I am the happy one for now.&lt;/p&gt;

&lt;p&gt;At last I have given my first pull request to &lt;strong&gt;&lt;em&gt;F# Community&lt;/em&gt;&lt;/strong&gt; project. Yes, Yes, Yes&amp;hellip; It is time for celebration. This can not be possible without a wonderful helping community over github, twitter, stackoverflow.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But two things are certain from my experience that Yak Shaving is pain in a##, and &lt;a href=&#34;http://sidewaffle.com/&#34;&gt;Side Waffle&lt;/a&gt; is flow less in saving it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I will highly encourage people having .Net Open Source project, please do make template and provide the boiler plate code. It will be hell easy to get started in that way. And it will save time from doing initial set up to get up and started.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;  Currently I am putting together V4 templates at my &lt;a href=&#34;https://github.com/kunjee17/ServiceStackFSharp&#34;&gt;repo&lt;/a&gt;.  And again facing issue to make Asp.Net version running.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right now I am waiting for my pull request to get accepted. Once done, do have a look. You will see that F# and Servicestack are made for each other. Both are strongly typed, believed in message driven design and async model of working.&lt;/p&gt;

&lt;p&gt;In current state where everyone is making API, this is most &lt;em&gt;viable&lt;/em&gt; option for .Net people to have.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Template is currently having V3.71, it is still under MIT.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even if someone like to move to V4, that is also not that costly option for the worth Servicestack bringing to development. Once I ll get up and running V4, I will put the template of that too.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Community members, if there are any suggestion, comments please do provide. And obviously I am happy to take pull request for my template projects too. Different combinations of Servicestack option will be great. Also, if someone can check out issue that will be also great.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Update2:&lt;/strong&gt;  Latest template is up at &lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/278caff1-917a-4ac1-a552-e5a2ce0f6e1f&#34;&gt;Visual Studio Gallery&lt;/a&gt;, now having asp.net host too. There are three additional templates. And also V4 issue is solved and project is working now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks F#, Servicestack and specially Side Waffle.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Asp.Net MVC5 with F#</title>
      <link>http://kunjan.in/2014/02/asp.net-mvc5-with-f/</link>
      <pubDate>Thu, 06 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/02/asp.net-mvc5-with-f/</guid>
      <description>&lt;p&gt;Thanks to &lt;a href=&#34;http://blog.danielmohl.com/&#34;&gt;Danial Mohl&lt;/a&gt; getting started with Asp.net MVC5 is pretty easy. He had put a tremendous effort to make different kind of templates. Even starting from MVC3 till date now.&lt;/p&gt;

&lt;p&gt;Old templates are like there are two projects one is C# and one is &lt;a href=&#34;http://fsharp.org&#34;&gt;F#&lt;/a&gt;. C# is having all the &lt;a href=&#34;http://vanilla-js.com/&#34;&gt;Java Script&lt;/a&gt;, html, css and stuff while F# is having coding part.&lt;/p&gt;

&lt;p&gt;But with time pass and version update, now we are having pure F# templates. A single project of F# having code, Java Script, cshtml, html, CSS everything. It is far more fun and easy to get started with. At the end of day F# is all about compressing code. Doing more with less code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Scala people, play is almost same as MVC framework. If you are following, code will be almost same only. I will still try to put code snippets wherever possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, if you haven&amp;rsquo;t downloaded template yet. Please check out my previous post the first one in series and download template. Once installed you are up and running to write some MVC code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I am assuming that people trying this; is quite familiar with MVC and other concepts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First I will be doing one to one map between C# and F# code. Just to get familiar with syntax. Then will move to optimized code to make it more functional.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Side Note&lt;/strong&gt; If you are not having Visual Studio Pro or higher one. Do not worry, templates are working with Express versions also. As per latest release F# is now primarily supported by &lt;a href=&#34;http://fsharp.org/use/windows/&#34;&gt;Desktop and Web Express version&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Install template, create new project with MVC5 and Web API option. Hit F5 and it is done. You are up and running.&lt;/p&gt;

&lt;p&gt;Feeling great?!? It is just started.
&lt;img src=&#34;http://kunjan.in/images/rollercoasterride.gif&#34; alt=&#34;roller coaster ride&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with Functional web</title>
      <link>http://kunjan.in/2014/02/getting-started-with-functional-web/</link>
      <pubDate>Thu, 06 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kunjan.in/2014/02/getting-started-with-functional-web/</guid>
      <description>&lt;p&gt;I am doing web development from quite a long time. And now a days I am keep pushing my self to do functional programming. &lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;Learning&lt;/a&gt; languages like &lt;a href=&#34;http://www.haskell.org/haskellwiki/Haskell&#34;&gt;Haskell&lt;/a&gt;, &lt;a href=&#34;http://www.scala-lang.org/&#34;&gt;Scala&lt;/a&gt;, &lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt;. Obviously I try my hand to other functional languages too as per time permits.&lt;/p&gt;

&lt;p&gt;As I am .Net developer my primary focused is working with &lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt; and I will also start from that only. You can also check out other functional articles of mine to check out what I think about functional programming and why it is necessity now a days.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt; for a long is treated as second class citizen in main stream programming in .Net area. But now it is picking up the pace. When I decided to write a complete series of web development with I was even thinking like that only. There will be C# project and &lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt; project. C# project will take care of UI and F# project will do all the heavy lifting.&lt;/p&gt;

&lt;p&gt;But thanks to wonderful community of &lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt;, we have now pure templates. And that is the point of start. Complete web development using &lt;a href=&#34;http://fsharp.org/&#34;&gt;F#&lt;/a&gt; only. Nothing can be more fun that this. And it is not ended here, there are testing , mocking , testing libraries.&lt;/p&gt;

&lt;p&gt;With this series, I will try to check out every vertical of web development. Including deployment to cloud.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I will also make sure to keep posting details about Scala and &lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt; too, in compare to &lt;a href=&#34;http://fsharp.org&#34;&gt;F#&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let&amp;rsquo;s start with &lt;strong&gt;Hello World&lt;/strong&gt;. Go to the visual studio gallery and download the templates and add-on for &lt;a href=&#34;http://fsharp.org&#34;&gt;F#&lt;/a&gt; web development.&lt;/p&gt;

&lt;p&gt;Here is the list.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/278caff1-917a-4ac1-a552-e5a2ce0f6e1f&#34;&gt;Servicestak&lt;/a&gt; (Update is coming soon)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/b55b8aac-b11a-4a6a-8a77-2153f46f4e2f&#34;&gt;NancyFX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/bbec75fa-0f31-47e9-a8ce-c301edb2fa4b&#34;&gt;Simple.Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/39ae8dec-d11a-4ac9-974e-be0fdadec71b&#34;&gt;Asp.net MVC5 &amp;amp; Web API2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/24ef5c87-b4e3-4c3b-b126-1064cc66e148&#34;&gt;Fantomas&lt;/a&gt; For code formatting&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/bec977b8-c9d9-4926-999e-e50c4498df8a&#34;&gt;F# Outlining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/f1dae7fe-1ecc-4f1b-86b5-32a2970d012a&#34;&gt;F# web templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installing these template and add on will give you nice ways to start. Trust me I am enjoying far more after these pure &lt;a href=&#34;http://fsharp.org&#34;&gt;F#&lt;/a&gt; templates arrived.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For people who is new to language, I will start from simple conversation of OOP to Functional programming. Most of them is one to one map only. So, there will be less use of pure functional concept. But slowly will move to more functional style of programming. And trying to achieve nirvana.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;People trying Scala or coming from Java background &lt;a href=&#34;http://www.playframework.com/&#34;&gt;Play&lt;/a&gt; is choice of framework for you. It is supported by wonderful community and build over the ever powerful &lt;a href=&#34;http://akka.io/&#34;&gt;AKKA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For people who don&amp;rsquo;t like types or coming from Ruby like language background. You can Clojure for you. And here is twitter conversation with &lt;a href=&#34;http://bodil.org/&#34;&gt;Bodil&lt;/a&gt; for the selection of framework.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://twitter.com/kunjee&#34;&gt;@kunjee&lt;/a&gt; I&amp;#39;m a bit out of touch, used to prefer straight Ring + Compojure, maybe Aleph. But that was before both core.async and Pedestal&amp;hellip;&lt;/p&gt;&amp;mdash; Bodil Stokke (@bodil) &lt;a href=&#34;https://twitter.com/bodil/statuses/431086156470833152&#34;&gt;February 5, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;For People who is going with F# / scala; there are couple of reference reading for getting started.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fsharpforfunandprofit.com/&#34;&gt;F# for fun and profit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pluralsight.com/training/Courses/TableOfContents/functional-architecture-fsharp&#34;&gt;Functional Architecture with F#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.jessitron.com/&#34;&gt;Jessica Kerr&amp;rsquo;s blog for Scala lovers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do have a look.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt; : - I am neither expert of &lt;em&gt;web&lt;/em&gt; nor &lt;em&gt;functional programming&lt;/em&gt;. But I know web a little bit more than other programming things and I love functional programming.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, what are we waiting for?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kunjan.in/images/rock.gif&#34; alt=&#34;rock&#34; /&gt;&lt;/p&gt;

&lt;p&gt;lets rock.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>