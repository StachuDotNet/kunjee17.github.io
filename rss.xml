<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title /><link>http://kunjan.in/rss.xml</link><description /><item><guid isPermaLink="true">http://kunjan.in/2015/11/azure-websites-with-paket/</guid><link>http://kunjan.in/2015/11/azure-websites-with-paket/</link><title>Azure web sites with Paket</title><description>&lt;p&gt;Whoever worked with Microsoft Shop knows about &lt;a href="https://www.nuget.org/"&gt;nuget&lt;/a&gt;. It is package manager for anything and everything related to .Net. And it is getting better and better with versions coming in. But again it is nowhere near maturity needed to work with projects having many small projects. Things get cranky soon. &lt;/p&gt;

</description><pubDate>Mon, 02 Nov 2015 18:30:00 Z</pubDate><a10:updated>2015-11-02T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Whoever worked with Microsoft Shop knows about &lt;a href="https://www.nuget.org/"&gt;nuget&lt;/a&gt;. It is package manager for anything and everything related to .Net. And it is getting better and better with versions coming in. But again it is nowhere near maturity needed to work with projects having many small projects. Things get cranky soon. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Now, there is better option as per my opinion called &lt;a href="https://fsprojects.github.io/Paket/"&gt;Paket&lt;/a&gt;. Very easy to get started. And so damn reliable. Couple of more command to learn but I guess it is ok. It most of the mess of nuget. And best thing no XML. &lt;/p&gt;

&lt;p&gt;Now, I normally throw anything and everything to Azure websites. Just do experiments and its free. Mostly I put project in &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; and pull in Azure. Easiest way to test something or anything which need network. &lt;/p&gt;

&lt;p&gt;Now, you can have Paket also instead of nuget with minimum changes. There are detailed &lt;a href="http://www.hanselman.com/blog/RunningSuaveioAndFWithFAKEInAzureWebAppsWithGitAndTheDeployButton.aspx"&gt;article&lt;/a&gt; you can found written by &lt;a href="http://www.hanselman.com"&gt;Scott Hanselman&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;But for you existing or new web project what can be minimum requirement. &lt;/p&gt;

&lt;p&gt;You need to create &lt;code&gt;.deployment&lt;/code&gt; in root of your project. It will tell Azure build system to not to go with defaults. (I guess build system is called Kudu.)&lt;/p&gt;

&lt;p&gt;In that file copy paste below code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[config]
command = build.cmd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two lines to tell use &lt;code&gt;build.cmd&lt;/code&gt; to build project. &lt;/p&gt;

&lt;p&gt;Now, we obviously need &lt;code&gt;build.cmd&lt;/code&gt; file in root. &lt;/p&gt;

&lt;p&gt;And here is code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@ECHO OFF
setlocal

echo ====== Restoring packages... ======

if not exist .paket\paket.exe (
  .paket\paket.bootstrapper.exe
)

.paket\paket.exe restore

if not %ERRORLEVEL% == 0 (
  echo ====== Failed to restore packages. ======
  exit 1
)

echo ====== Building... ======

msbuild /p:Configuration=Release

if not %ERRORLEVEL% == 0 (
echo ====== Build failed. ======
  exit 1
)

if not "%DEPLOYMENT_TARGET%" == "" (
  echo ====== Deploying... ======
  xcopy /y /e &amp;lt;project name&amp;gt; "%DEPLOYMENT_TARGET%"
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Code is very much self explanatory. &lt;/p&gt;

&lt;p&gt;First pull latest paket.exe, then restore package. msbuild is there only so use it. And age-old xcopy to copy built files to deployment target. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bang! Its done. You can check things out in with log tail or console on azure portal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to go little bit advanced and want kinda build system then you can always try for &lt;a href="http://fsharp.github.io/FAKE/"&gt;FAKE&lt;/a&gt;. But if you are in great hurry and don't want waste time with nuget issues go for Paket. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Packaging!!!&lt;/strong&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/11/angularjs-and-mess-we-are-in/</guid><link>http://kunjan.in/2015/11/angularjs-and-mess-we-are-in/</link><title>Angularjs and the Mess we are in</title><description>&lt;p&gt;Who doesn't know &lt;a href="https://angularjs.org/"&gt;Angularjs&lt;/a&gt;?!? Everyone worked is web, mobile, server, windows, mac, Linux, Google, Microsoft or anyway related to this knows about it. And its fun when people tell me&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know about angularjs. Its pretty hot now a days. I'm planning to learn it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh man...&lt;/p&gt;

</description><pubDate>Sun, 01 Nov 2015 18:30:00 Z</pubDate><a10:updated>2015-11-01T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Who doesn't know &lt;a href="https://angularjs.org/"&gt;Angularjs&lt;/a&gt;?!? Everyone worked is web, mobile, server, windows, mac, Linux, Google, Microsoft or anyway related to this knows about it. And its fun when people tell me&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know about angularjs. Its pretty hot now a days. I'm planning to learn it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh man...&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Ok I am no expert here in Angularjs. And I prefer not to be expert with any framework. Be it anything. But you know there is another &lt;a href="https://angular.io/"&gt;Angularjs&lt;/a&gt; from another universe. If you are learning (like seriously) then go for this one.&lt;/p&gt;

&lt;p&gt;But be sure. There is a chance you will be inviting a hell of mess. I have been working with angular since last 3+ year. Either leading a team or part of team. And one thing I learn hard way. You need a discipline when you are working with JavaScript. But you need discipline of delta forces when you are working with angularjs.&lt;/p&gt;

&lt;p&gt;As metioned in site it is a superhero. And like every superhero it also should have responsiblitiy. But angular is abusing JavaScript every way possible. If something is possible that doesn't means we should be doing it. We have damn book called &lt;a href="http://shop.oreilly.com/product/9780596517748.do"&gt;JavaScript: Good Parts&lt;/a&gt; all about it.&lt;/p&gt;

&lt;p&gt;It called Good Parts means you just use Good Parts and leave bad one alone. But with angular it is like you are leaving in Bar and told not to touch Alcohol. On top of it you have &lt;a href="https://play.google.com/store/apps/details?id=com.untappdllc.app&amp;amp;hl=en"&gt;untapped&lt;/a&gt; installed in your mobile.&lt;/p&gt;

&lt;p&gt;Why this? Lets take things one by one&lt;/p&gt;

&lt;h2&gt;Scope - Poor man's global&lt;/h2&gt;

&lt;p&gt;We should not use global. That is proven truth. No, doubt in it. But what about &lt;strong&gt;We love &lt;em&gt;global&lt;/em&gt; so much.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got scope then. JSLint can't catch it and we still have it. Now, angular lover may argue that we should not use it. But how can you prevent it from using it. It all comes to putting as rule in project wiki or training. But there is no way to prevent it. At least I don't know one.&lt;/p&gt;

&lt;h2&gt;Magical- Directives&lt;/h2&gt;

&lt;p&gt;Whenever you start abusing Angularjs people comes up with &lt;code&gt;But we have Directives?!?&lt;/code&gt; that magically solves everything. The problem with that it is hiding too much. Its good if things works out but when it breaks. Oh man. &lt;em&gt;You seriously wish that never happen.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you still like Directives try implement two directive on one. It will be too much fun. And pure magic if one directive is created by you and other is created by third third-party.&lt;/p&gt;

&lt;h2&gt;Three musketeers - Service, Factory and Provider&lt;/h2&gt;

&lt;p&gt;I don't know how many times I have searched google with &lt;code&gt;Service vs Factor vs Provider&lt;/code&gt; . Nowadays you don't even have to put angularjs on top of that. If you write above message you will have angularjs answer only. It way too complicated for simple module with helper functions. Aren't we all happy with few base global in age of JQuery that passed in as parameter in modular functions. And now we have DI(Proudly called as Dependancy Injection).&lt;/p&gt;

&lt;h2&gt;Wired - DI&lt;/h2&gt;

&lt;p&gt;It is good thing. A good thing invented from the object-oriented concept. And then it is used almost every where. whether it is needed or not. For the case of Angular it is good we can have module without worrying about modules. Directly available in function. But then what about other libraries we need to created wrapper around it to make angular way. And then have plenty of gulp or grunt plumbing tools so you can save your ass when things minified and combined.&lt;/p&gt;

&lt;h2&gt;Grass is always green on other side&lt;/h2&gt;

&lt;p&gt;I don't say angular beast we never wanted. But you need to use it carefully. I have seen more than enough projects, new and legacy using angular in all wrong way. It make tough to debug or extend. Every time you got feeling that lets dump it all and make it again. We don't need to learn another framework just learn &lt;code&gt;JavaScript - Good Parts&lt;/code&gt;. And things are all good. But instead most of resources are wasted on teaching Angularjs. With a hope that &lt;strong&gt;Super Hero&lt;/strong&gt; framework will solve every issue we have.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It is not going to be. It was never going to be. It will never going to be.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We are the one who gonna solve our issue. Pick your framework wisely and try not to hope so much from it.&lt;/p&gt;

&lt;h2&gt;My Personal Pick&lt;/h2&gt;

&lt;p&gt;If I want to go so hard on my self and don't want any error in my &lt;strong&gt;to be&lt;/strong&gt; big project. I will choose &lt;a href="http://elm-lang.org"&gt;elm&lt;/a&gt;. It's not framework but a hell of a language with crazy html support.&lt;/p&gt;

&lt;p&gt;If people are coming from JavaScript land to join me then I ll go for &lt;a href="https://facebook.github.io/react/"&gt;react&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there is a need quick two-way binding on a single page then &lt;a href="http://knockoutjs.com/"&gt;knockout&lt;/a&gt; is a good thing.&lt;/p&gt;

&lt;p&gt;If I want to go fast for small project. And I am the only one working on it at least for now. Or may be some single person working on it. I will go with Angularjs. I don't mind. It is quick and easy.&lt;/p&gt;

&lt;p&gt;Big project. &lt;a href="http://emberjs.com/"&gt;Ember&lt;/a&gt; is there. But few times I feel it is unnecessary complexity. Two way binding and not much of angular mess &lt;a href="http://aurelia.io/"&gt;Aurelia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Above all opinion is derived from my personal experience and not influenced by any one. And it is my own.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-command-pattern/</guid><link>http://kunjan.in/2015/04/functional-command-pattern/</link><title>Functional Command Pattern</title><description>&lt;p&gt;Command pattern is a pattern which allows executor of the pattern to execute or playback the commands. In most of the application wherever Undo/Redo is implemented this pattern is used. &lt;/p&gt;

&lt;p&gt;Here is C# code. &lt;/p&gt;

</description><pubDate>Fri, 24 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-24T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Command pattern is a pattern which allows executor of the pattern to execute or playback the commands. In most of the application wherever Undo/Redo is implemented this pattern is used. &lt;/p&gt;

&lt;p&gt;Here is C# code. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/5wmvGN" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Now, in this code Command Pattern is not in its purest form. As, normally in command pattern we are saving state of outside object. Instead I just returned the result to mock out side object. &lt;/p&gt;

&lt;p&gt;Now have a look at similar F# code. That is doing kinda same thing. &lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/htQsqv" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Here, instead of class I am using functions with the command type. And definition of the command is given as type instead of interface. Now, this is fun with functional programming in general where functions are first class citizen. I can save commands and events like objects only. I don't have to wrap around some classes. This makes code more concise.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Fan of &lt;a href="http://martinfowler.com/bliki/CQRS.html"&gt;CQRS&lt;/a&gt; and &lt;a href="http://www.martinfowler.com/eaaDev/EventSourcing.html"&gt;Event Sourcing&lt;/a&gt;; listen up these both design concepts are standing on the shoulders of command pattern.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-strategy-pattern/</guid><link>http://kunjan.in/2015/04/functional-strategy-pattern/</link><title>Functional Strategy Pattern</title><description>&lt;p&gt;Another pattern that is widely used in Object Oriented world. And as far as .Net world is concern it is may be most used pattern in wide range of .Net API. And it &lt;em&gt;heavily&lt;/em&gt; used in &lt;em&gt;heavily&lt;/em&gt; used LINQ API.&lt;/p&gt;

&lt;p&gt;So, I guess giving a understanding of that is kinda waste of space. Have a look at C# code.&lt;/p&gt;

</description><pubDate>Thu, 23 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-23T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Another pattern that is widely used in Object Oriented world. And as far as .Net world is concern it is may be most used pattern in wide range of .Net API. And it &lt;em&gt;heavily&lt;/em&gt; used in &lt;em&gt;heavily&lt;/em&gt; used LINQ API.&lt;/p&gt;

&lt;p&gt;So, I guess giving a understanding of that is kinda waste of space. Have a look at C# code.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/c4qcvo" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;People familiar with LINQ and lovers of Lambda will definitely argue that this is can be replaced by delegates. And for the face I am arguing the same. But for now I have took this sample as a traditional practice. &lt;/p&gt;

&lt;p&gt;Now, have a look at the F# code doing the same. &lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/rhn63P" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Now, it is definitely not &lt;strong&gt;one to one&lt;/strong&gt; replacement as I have did in last few posts. But here I have replaced class with function but we are achieving the same thing.&lt;/p&gt;

&lt;p&gt;Now, what is strategy pattern. As name suggest it is used to provide strategy from the consumer end. It is like I am saying that I want coffee and also I am telling I want cappuccino. And as shown in sample for sorting I am passing sorting strategy also. For example case I haven't passed array else I have to pass array or list and also strategy or how to sort it. It is mainly used when consumer is having control on how to do execution but execution is done by someone else. &lt;/p&gt;

&lt;p&gt;Now, in case of C# and Java8 where lambda is available. So I have this functional behavior there also. But for the fact it is functional programming concept of passing functions around &lt;em&gt;(or some may argue it is object oriented concept in purest form)&lt;/em&gt; and syntax wise it more suitable / human friendly in functional programming language. &lt;/p&gt;

&lt;p&gt;Here is C# example.&lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/63PK93" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;It is very much near to F# counter part. Only F# syntax is having less noise. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It something all togather when this pattern shown in context of Functional Programming. I am just composing functions. But it serves as Strategy Pattern of OOP so I have used that.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-singleton-pattern/</guid><link>http://kunjan.in/2015/04/functional-singleton-pattern/</link><title>Functional Singleton Pattern</title><description>&lt;p&gt;This is my favorite pattern. First pattern I learn. And till date I don't know where to use it. &lt;strong&gt;So, I use everywhere. :P&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;I have mainly used for database connection object and then all JavaScript frameworks are exposing Singleton object only. I can say it is quite useful in case of web.&lt;/p&gt;

</description><pubDate>Wed, 22 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-22T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;This is my favorite pattern. First pattern I learn. And till date I don't know where to use it. &lt;strong&gt;So, I use everywhere. :P&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;I have mainly used for database connection object and then all JavaScript frameworks are exposing Singleton object only. I can say it is quite useful in case of web.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Fun part about this pattern is that most of the people including me always use this pattern to show off that we know patterns and we follow it in practice but in most cases that practice starts and stops with Singleton Pattern. &lt;/p&gt;

&lt;p&gt;Let's understand the pattern, as name suggested this pattern is propagating singularity. Object of specific class will be created once and only once but No more. Object creation is totally hidden away from consumer and with static method object will be handed over to consumer. If there is a instance presence it will be handed over else new instance will be created and it will be given to consumer.&lt;/p&gt;

&lt;p&gt;Let's check out the C# code&lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/ou8ReI" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;See, simple and easy. &lt;/p&gt;

&lt;p&gt;And now here is F# code. Even simpler and easier &lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/EAcx3W" frameborder="0"&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
  &lt;p&gt;Look ma no &lt;code&gt;null&lt;/code&gt;. As F# is not allowing null by default in the system there is no need to check it. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Instead make constructor private to stop creating object of type and provide same instance of type again and again. &lt;/p&gt;

&lt;p&gt;Now, in current scenarios where garbage collector are so powerful and we are having quite a good amount of hardware to process. Singleton is not used while writing domain/business code. But still it is widely used on API side to expose specific functionality. &lt;/p&gt;

&lt;p&gt;I am still to find relevance in case of functional programming. In functional programming &lt;code&gt;type&lt;/code&gt; is different then &lt;code&gt;class&lt;/code&gt;. In normal cases they don't have behaviors attached with it. So, it reducing the need of this pattern. &lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-factory-pattern/</guid><link>http://kunjan.in/2015/04/functional-factory-pattern/</link><title>Functional Factory Pattern</title><description>&lt;p&gt;The fun part working or explaining functional pattern is word &lt;code&gt;functional&lt;/code&gt; can be used in very &lt;code&gt;fun&lt;/code&gt; way. Just like it is used in title here. &lt;/p&gt;

&lt;p&gt;Now, factory pattern may be the most used pattern in Object Oriented world. Here is code in &lt;code&gt;C#&lt;/code&gt;.&lt;/p&gt;

</description><pubDate>Tue, 21 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-21T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;The fun part working or explaining functional pattern is word &lt;code&gt;functional&lt;/code&gt; can be used in very &lt;code&gt;fun&lt;/code&gt; way. Just like it is used in title here. &lt;/p&gt;

&lt;p&gt;Now, factory pattern may be the most used pattern in Object Oriented world. Here is code in &lt;code&gt;C#&lt;/code&gt;.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/omFgPe" frameborder="0"&gt;&lt;/iframe&gt;  

&lt;p&gt;Factory method is basically used to abstract away the object creation. I am not worried how object is created but I am worried about the behavior of the objects that are created. 
Now, lets have a look at &lt;code&gt;F#&lt;/code&gt; equivalent&lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/vt23Gc" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;If you can see it is short and simple and providing same result.&lt;/p&gt;

&lt;p&gt;Now, functional programming is not &lt;code&gt;one to one&lt;/code&gt; map with Object Oriented programming. But we can always have similar a concept.&lt;/p&gt;

&lt;p&gt;Factory Pattern simply hiding the object creation. And in F# we are having option type which is helping us to provide concrete definition of product. And that is the reason we can skip the concrete class and have product definition in type.&lt;/p&gt;

&lt;p&gt;I have took examples for this post from &lt;a href="http://www.dofactory.com/"&gt;Dofactory&lt;/a&gt; and &lt;a href="http://fssnip.net/authors/Tao+Liu"&gt;Tao Liu&lt;/a&gt; s work. I have made few changes thought to make it as similar as possible. In future post I will try to go into greater detail about respective pattern and also check out patterns that can be absolute when you come to the world of functional programming. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;F# people. Your comments and review are required. Will update the code as per the suggestions. Do provide them. I don't mind adding examples of other functional language if anyone is helping me out. &lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</guid><link>http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</link><title>Demystifying Design Pattern in a Functional Way</title><description>&lt;p&gt;As functional programming is taking pace in current software development. There is always a question what is the difference and why on the earth I should bother about it. &lt;/p&gt;

&lt;p&gt;Most of the time reason of the question comes because of human nature of resistance towards learning new things. And then there are people who can easily learn new things but even for them unlearning something and re-learning new things is pretty tough. And this makes a problem every time. &lt;/p&gt;

</description><pubDate>Mon, 20 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-20T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;As functional programming is taking pace in current software development. There is always a question what is the difference and why on the earth I should bother about it. &lt;/p&gt;

&lt;p&gt;Most of the time reason of the question comes because of human nature of resistance towards learning new things. And then there are people who can easily learn new things but even for them unlearning something and re-learning new things is pretty tough. And this makes a problem every time. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Here I am not saying I am going to explain anything as expert. I am no where near expert and I also faces same problems as above. But I guess new things are always worth trying. &lt;/p&gt;

&lt;p&gt;Now one the things that get projected as &lt;strong&gt;silver bullet&lt;/strong&gt; for every software solutions is &lt;a href="https://en.wikipedia.org/wiki/Software_design_pattern"&gt;Design Patterns&lt;/a&gt;. Now for the facts they are good, very good. May be best thing that can happen to Object Oriented Programming. But it is showing a concept and most of the time we loose that concept in an implementation. &lt;/p&gt;

&lt;p&gt;If we go into history, there are two ways of solving problem one is &lt;a href="https://en.wikipedia.org/wiki/Alan_Turing"&gt;Turing&lt;/a&gt; way (OOP) and other is &lt;a href="https://en.wikipedia.org/wiki/Alonzo_Church"&gt;Church&lt;/a&gt; way (FP). That is it. They both are ways and you can achieve goals both ways. &lt;/p&gt;

&lt;p&gt;Now here comes the personal choice what way you like to choose based on given circumstances. Turing way is good when I have limited resources to process details/data. While Church way is good when I have good number of resources to process details/data. &lt;/p&gt;

&lt;p&gt;For me or I guess for all the people from functional programming community Church ways is a choice. And visible benefit of selecting that is readability and representation of code I am doing. It is more like what I am saying is I am writing. And now it is up to computer to process that. Now, computer need to be that powerful to process almost natural language.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am not considering natural / logic language here. It is out of scope of this article, blog and also my brain for now. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that is reason it is getting pace now a days. We are having hardware resources to process that. Or may be we can say on reverse way that to utilize this much hardware church based approach is far better. As it is having benefit towards making things simple.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="http://www.infoq.com/presentations/Simple-Made-Easy"&gt;I have said simple, I haven't said easy&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, here comes the problem. I need to unlearn or relearn the concepts I have learn. And I have made it easy for me after working so hard. &lt;/p&gt;

&lt;p&gt;Practically speaking I don't see any way out. But there is no need to completely unlearn it but may be can be used in some other way. Like the Design Pattern from Object Oriented world. &lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;I love this slide from &lt;a href="https://twitter.com/ScottWlaschin"&gt;@ScottWlaschin&lt;/a&gt; &amp;#39;s talk on FP &amp;quot;patterns&amp;quot; &lt;a href="http://t.co/8UuwVqlelD"&gt;pic.twitter.com/8UuwVqlelD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Knot, Not Naught! (@jeroldhaas) &lt;a href="https://twitter.com/jeroldhaas/status/535919819355598848"&gt;November 21, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;I guess that was easy and simple both. Everything is just a functions. Ok, that is said I am sharing a video everyone in functional programming just loves from &lt;a href="https://twitter.com/ScottWlaschin"&gt;Scott Wlaschin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/113588389" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/113588389"&gt;Functional programming design patterns by Scott Wlaschin&lt;/a&gt; from &lt;a href="https://vimeo.com/ndcconferences"&gt;NDC Conferences&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Now, in coming post I will try to take every pattern one by one and try to demystify it. Obviously in a functional way. And also try to explore some functional patterns also. Stay tuned. &lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/03/journey-in-search-of-destination/</guid><link>http://kunjan.in/2015/03/journey-in-search-of-destination/</link><title>Journey in Search of Destination</title><description>&lt;p&gt;I never thought I would make this public. I wrote long back for one of my dear cousin. It was relevant then. But it is more relevant now. One of my best friend, batch mate, college mate, colleague at one point of time, rommie is now moving to another country. With a aim to never looking back for all the good reasons. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/nrezzzz"&gt;Andrew Vyas&lt;/a&gt; this is for you. You are one of the friend I never wanted because I knew one day time flew and you or me will move on and that may be good for future but at point it is utterly painful. Pain that can't be defined by words my friend. But still here are few words&lt;/p&gt;

</description><pubDate>Sat, 07 Mar 2015 18:30:00 Z</pubDate><a10:updated>2015-03-07T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;I never thought I would make this public. I wrote long back for one of my dear cousin. It was relevant then. But it is more relevant now. One of my best friend, batch mate, college mate, colleague at one point of time, rommie is now moving to another country. With a aim to never looking back for all the good reasons. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/nrezzzz"&gt;Andrew Vyas&lt;/a&gt; this is for you. You are one of the friend I never wanted because I knew one day time flew and you or me will move on and that may be good for future but at point it is utterly painful. Pain that can't be defined by words my friend. But still here are few words&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;मंजिल की तलाश में दूर हम निकल गए&lt;br /&gt;
रस्ते बनते गए हमराही मिलते गए&lt;br /&gt;
मंजिल तोह आज भी दूर है&lt;br /&gt;
मंजिल के लिए प्यार भी  वही है&lt;br /&gt;
लेकिन पता नहीं क्यों रस्ते इतने अच्छे क्यों है&lt;br /&gt;
आँखे इतनी नर्म क्यों है&lt;br /&gt;
मंजिल पाने की चाह तो आज भी वही है&lt;br /&gt;
हमराही को छोड़ने का गम क्यों है 
हमराही कल भी बिछड़े थे, आज भी बिछड़ रहे है&lt;br /&gt;
लेकिन दील मे एक सन्नाटा, तन्हाई, दर्द आज ही क्यों है&lt;br /&gt;
मंजिल की तलाश में हम तो फीर भी निकल चले है&lt;br /&gt;
रस्ते फीर बनते चले है, हमराही फीर मिलते चले है&lt;br /&gt;
लेकिन दील मै उनकी याद क्यों है, ये दर्द एक बेचैनी सि क्यों है &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For people who don't understand Hindi, here is English translation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In search of destination we came long way&lt;br /&gt;
roads started carving them selves, new companion started joining me&lt;br /&gt;
destination is still far&lt;br /&gt;
love for destination is still there&lt;br /&gt;
but don't know why roads seems more beautiful&lt;br /&gt;
and have tears at the corner of my eyes&lt;br /&gt;
Desire to get to the destination is still the same&lt;br /&gt;
then why there is pain for leaving companion back&lt;br /&gt;
I left companion and I am leaving companion back&lt;br /&gt;
then why there is silence, loneliness and pain in heart&lt;br /&gt;
Still moving on in search of destination&lt;br /&gt;
roads are being made again, companion are started joining again&lt;br /&gt;
then why there are memories them of who left behind, why there is pain, restlessness in heart.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dear friend wherever you go my wishes and prayers are always there for you.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2014/11/typed-hack-of-cloudant-using-fsharp/</guid><link>http://kunjan.in/2014/11/typed-hack-of-cloudant-using-fsharp/</link><title>Typed Hack of Cloudant using F#</title><description>&lt;p&gt;There is a continues war between typed and untyped data. But then there is need of finding a middle ground for ever growing application. There is place, a requirement when I feel application should be typed and data store should be untyped. So, I created this little code snippet to access cloudant (a couchbase fork) NOSQL database. &lt;/p&gt;

</description><pubDate>Thu, 27 Nov 2014 18:30:00 Z</pubDate><a10:updated>2014-11-27T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;There is a continues war between typed and untyped data. But then there is need of finding a middle ground for ever growing application. There is place, a requirement when I feel application should be typed and data store should be untyped. So, I created this little code snippet to access cloudant (a couchbase fork) NOSQL database. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;I was knowing about &lt;a href="http://cloudant.com"&gt;Cloudant&lt;/a&gt; from long back. Even before IBM bought it. It is indeed a wonderful service and also kinda free for small stuff. I thought this will be best fit for now. (I still don't know why I didn't use Mongodb). &lt;/p&gt;

&lt;p&gt;As there is no need of scary relations ships with database. So, I decided to use this one. &lt;/p&gt;

&lt;p&gt;Now as one problem is solved other started. It is saving data that is in JSON format. That is untyped and F# is statically typed. I have tried few libraries developed in C# but was not happy. So, I thought it is just a HTTP request, why shouldn't I give it as shot to make one of my own helper module? It is may be some what dirty attempt but I got it working what I needed with less than 100 lines. Here is code snippets.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#r "../packages/Http.fs.1.4.0/lib/net40/HttpClient.dll"
#r "../packages/Newtonsoft.Json.6.0.6/lib/net45/Newtonsoft.Json.dll"

open HttpClient
open Newtonsoft.Json
open Newtonsoft.Json.Linq

[&amp;lt;CLIMutableAttribute&amp;gt;]
type Row&amp;lt;'a&amp;gt; = 
    { id : string
      key : string
      value : 'a }

[&amp;lt;CLIMutableAttribute&amp;gt;]
type ResultSet&amp;lt;'a&amp;gt; = 
    { total_rows : int
      offset : int
      rows : Row&amp;lt;'a&amp;gt; [] }

[&amp;lt;CLIMutableAttribute&amp;gt;]
type PostResult = 
    { ok : string
      id : string
      rev : string }

[&amp;lt;CLIMutableAttribute&amp;gt;]
type PostError = 
    { error : string
      reason : string }

let cloudantUrl = @"&amp;lt;cloudanturl/databasename/&amp;gt;"
let username = @"&amp;lt;username&amp;gt;"
let password = @"&amp;lt;password&amp;gt;"

let private cloudantGet url = 
    let request = 
        createRequest Get url
        |&amp;gt; withBasicAuthentication username password
        |&amp;gt; withHeader (ContentType "application/json")
    request |&amp;gt; getResponseBody

let private cloudantPost url data = 
    let request = 
        createRequest Post url
        |&amp;gt; withBasicAuthentication username password
        |&amp;gt; withBody data
        |&amp;gt; withHeader (ContentType "application/json")
    request |&amp;gt; getResponseBody

let private checkDataForNewId (data : JObject) = 
    let removeIdrev (data : JObject) = 
        data.Remove("_id") |&amp;gt; ignore
        data.Remove("_rev") |&amp;gt; ignore
    if System.String.IsNullOrEmpty(data.["_id"].ToString()) || System.String.IsNullOrEmpty(data.["_rev"].ToString()) then 
        removeIdrev data
    data

let PostJson&amp;lt;'a&amp;gt; data = 
    let serializedObject = JObject.FromObject(data) |&amp;gt; checkDataForNewId
    serializedObject.Add("$doctype", JToken.Parse("'" + data.GetType().Name + "'"))
    cloudantPost cloudantUrl &amp;lt;| serializedObject.ToString()

let GetJsonByType&amp;lt;'a&amp;gt; = 
    let resultset = 
        JsonConvert.DeserializeObject&amp;lt;ResultSet&amp;lt;'a&amp;gt;&amp;gt;
            (cloudantGet (cloudantUrl + "/_design/Type/_view/" + typeof&amp;lt;'a&amp;gt;.Name))
    query { 
        for row in resultset.rows do
            select row.value
    }

let GetJsonById&amp;lt;'a&amp;gt; Id = JsonConvert.DeserializeObject&amp;lt;'a&amp;gt;(cloudantGet (cloudantUrl + Id))

[&amp;lt;CLIMutableAttribute&amp;gt;]
type Person = 
    { _id : string
      _rev : string
      FirstName : string
      LastName : string }

let newPerson = 
    { _id = ""
      _rev = ""
      FirstName = "Boom"
      LastName = "Baam" }

let inline isNull (x:^a when ^a : not struct) =
    obj.ReferenceEquals (x, Unchecked.defaultof&amp;lt;_&amp;gt;)

let findPerson = 
    query { 
        for p in GetJsonByType&amp;lt;Person&amp;gt; do
            where (p.FirstName = "Boom")
            select p
            headOrDefault
            }
isNull findPerson    
GetJsonById&amp;lt;Person&amp;gt; ("3b389dc6b8ee0dcbf7f366faaa59cf42")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In above code below part is just for testing. And even with that code snippet is 98 lines. So, with blank line removed it is even short. &lt;/p&gt;

&lt;p&gt;Now, in cloudant I need to create views so its code is like &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function(doc) {
    if (doc.$doctype !== "Person") return;
    var copydoc = JSON.parse(JSON.stringify(doc));
    delete copydoc["$doctype"];
    emit(doc._id,copydoc);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I need &lt;code&gt;$doctype&lt;/code&gt; while I am inserting or updating data only, not while reading. So, I am removing it. As I am already filtering based on type.&lt;/p&gt;

&lt;p&gt;In above code two libraries are getting used one is &lt;a href="https://github.com/relentless/Http.fs"&gt;Http.fs&lt;/a&gt; and the other is &lt;a href="http://james.newtonking.com/json"&gt;JSON.net&lt;/a&gt; libraries. &lt;/p&gt;

&lt;p&gt;In library as you can see I am not doing anything special. I am inserting data with type information. If new data is there I am removing &lt;code&gt;_id&lt;/code&gt; and &lt;code&gt;_rev&lt;/code&gt; and for simplicity sake I had put &lt;code&gt;_id&lt;/code&gt; and &lt;code&gt;_rev&lt;/code&gt; in all the types I am using to interacting with Cloudant data store. &lt;/p&gt;

&lt;p&gt;So, now whenever I am reading I just need to give type and that will be fetched as collection of that typed records. And once collection came to memory now I have powerful F# to process data. In above code I am using &lt;code&gt;query&lt;/code&gt; expression to do so. It becomes very easy and fun to use. And it is damn fast. At least for now.&lt;/p&gt;

&lt;p&gt;Now, I don't know it if perfect or not. It kinda part functional and part Object Oriented as far as I know. Should I convert this to Type Provider or is it possible or not? I don't know. But one thing is sure I am achieving what I wanted with simplest possible code. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dear F# community members&lt;/strong&gt; do provide your views on this. And also let me know if it will be use full to make it more mature and push it as nuget package. Or may be a type provider for Cloudant? &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Highly inspired by &lt;a href="https://twitter.com/dmohl"&gt;Daniel Mohl's&lt;/a&gt; old library &lt;a href="https://github.com/dmohl/FSharpCouch"&gt;FSharpCouch&lt;/a&gt;. Thank you... :)&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2014/11/sails-sailing-on-azure-websites/</guid><link>http://kunjan.in/2014/11/sails-sailing-on-azure-websites/</link><title>Sails sailing seamlessly on Azure Web Sites</title><description>&lt;p&gt;There are lots of &lt;a href="http://nodeframework.com/"&gt;frameworks&lt;/a&gt; for web development in &lt;a href="http://nodejs.org/"&gt;Nodejs&lt;/a&gt;. Many of them are pretty cool. I pretty much like the &lt;a href="http://sailsjs.org/#/"&gt;SailsJS&lt;/a&gt;. And also have worked on that in recent past. &lt;/p&gt;

&lt;p&gt;Now, when it comes to hosting I love the &lt;a href="http://azure.microsoft.com/en-us/"&gt;Azure&lt;/a&gt; for various reasons. It is specially awesome when it comes to web sites. You do some experiments and throw it towards azure and that is ready for world to check out. My many experiments with &lt;a href="http://kunjan.in/category/functional-web/"&gt;F# and Web&lt;/a&gt; are already there. &lt;/p&gt;

</description><pubDate>Thu, 06 Nov 2014 18:30:00 Z</pubDate><a10:updated>2014-11-06T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;There are lots of &lt;a href="http://nodeframework.com/"&gt;frameworks&lt;/a&gt; for web development in &lt;a href="http://nodejs.org/"&gt;Nodejs&lt;/a&gt;. Many of them are pretty cool. I pretty much like the &lt;a href="http://sailsjs.org/#/"&gt;SailsJS&lt;/a&gt;. And also have worked on that in recent past. &lt;/p&gt;

&lt;p&gt;Now, when it comes to hosting I love the &lt;a href="http://azure.microsoft.com/en-us/"&gt;Azure&lt;/a&gt; for various reasons. It is specially awesome when it comes to web sites. You do some experiments and throw it towards azure and that is ready for world to check out. My many experiments with &lt;a href="http://kunjan.in/category/functional-web/"&gt;F# and Web&lt;/a&gt; are already there. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Recently I was talking with a friend about SailsJS and discussion kinda stuck at deployment part. As it is having kinda manual process involved. It is never a issue to fire a few commands but even why I should waste few key strokes when that can be done by Azure.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Always a fan of continues integration and continues delivery mechanism &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I searched Google to find out if anyone has done this before. Results showing couple of examples; but all with spinning up VM on Azure and hosting a application. But I think that is to a overkill. &lt;/p&gt;

&lt;p&gt;I tried &lt;code&gt;sails new&lt;/code&gt; and put a web.config file in root folder and try to published it with web matrix. And web site crashed. &lt;strong&gt;&lt;em&gt;I still don't recall when things just run without crashing at first shot with me.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I can see the streaming log (&lt;em&gt;console.log in nodejs case&lt;/em&gt;) with &lt;code&gt;azure site log tail &amp;lt;sitename&amp;gt;&lt;/code&gt; and found out that it is not getting node modules. That is weird as I was pushing npm_modules too. &lt;/p&gt;

&lt;p&gt;Then I tried with github repository. And that thing just worked. Without any issue and also directly in production mode. (&lt;em&gt;I seriously don't know how it switched to production mode. As for production mode I need to pass parameter --prod with app.js&lt;/em&gt;)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Don't forget to change server.js to app.js in web.config. I guess it is kinda required. I am also skipping npm_modules with gitignore.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right now first page is running without any issue. So, now it is time to sailing on azure web sites with sailsjs. &lt;/p&gt;

&lt;p&gt;Here is &lt;a href="http://sailslift.azurewebsites.net/"&gt;demo&lt;/a&gt; and my &lt;a href="https://github.com/kunjee17/sailslift"&gt;github repo&lt;/a&gt;. Feel free to clone and give PR with some demo application. I seriously like to see how far it can go.&lt;/p&gt;

&lt;p&gt;Let me know if any further details are required.&lt;/p&gt;
</a10:content></item></channel></rss>