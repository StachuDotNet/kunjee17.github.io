<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title /><link>http://kunjan.in/rss.xml</link><description /><item><guid isPermaLink="true">http://kunjan.in/2015/12/1729/</guid><link>http://kunjan.in/2015/12/1729/</link><title>1729</title><description>&lt;blockquote&gt;
  &lt;p&gt;This post is part of &lt;a href="https://sergeytihon.wordpress.com/2015/10/25/f-advent-calendar-in-english-2015/"&gt;F# Advent&lt;/a&gt; calender. Thanks &lt;a href="https://twitter.com/sergey_tihon"&gt;Sergey Tihon&lt;/a&gt; for arranging this and giving me chance. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First I like to clarify that this was &lt;em&gt;not&lt;/em&gt; my original choice for FSAdvent calender. I was going to write long post about web, AKKA, api and real time system. My current working area. But this time's calender entries are reaching new level and dimension. And recent &lt;a href="http://evelinag.com/blog/2015/12-15-star-wars-social-network/index.html#.VnK_aRV97IV"&gt;post&lt;/a&gt; from &lt;a href="https://twitter.com/evelgab"&gt;Evelina Gabasova&lt;/a&gt; is kind of reason behind change. Do read the post and you may like to re-watch &lt;strong&gt;Star Wars&lt;/strong&gt; series. Evelina you are super awesome. And post was too good.  &lt;/p&gt;

&lt;p&gt;So, why &lt;strong&gt;&lt;em&gt;1729&lt;/em&gt;&lt;/strong&gt;?&lt;/p&gt;

</description><pubDate>Wed, 16 Dec 2015 18:30:00 Z</pubDate><a10:updated>2015-12-16T18:30:00Z</a10:updated><a10:content type="html">&lt;blockquote&gt;
  &lt;p&gt;This post is part of &lt;a href="https://sergeytihon.wordpress.com/2015/10/25/f-advent-calendar-in-english-2015/"&gt;F# Advent&lt;/a&gt; calender. Thanks &lt;a href="https://twitter.com/sergey_tihon"&gt;Sergey Tihon&lt;/a&gt; for arranging this and giving me chance. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First I like to clarify that this was &lt;em&gt;not&lt;/em&gt; my original choice for FSAdvent calender. I was going to write long post about web, AKKA, api and real time system. My current working area. But this time's calender entries are reaching new level and dimension. And recent &lt;a href="http://evelinag.com/blog/2015/12-15-star-wars-social-network/index.html#.VnK_aRV97IV"&gt;post&lt;/a&gt; from &lt;a href="https://twitter.com/evelgab"&gt;Evelina Gabasova&lt;/a&gt; is kind of reason behind change. Do read the post and you may like to re-watch &lt;strong&gt;Star Wars&lt;/strong&gt; series. Evelina you are super awesome. And post was too good.  &lt;/p&gt;

&lt;p&gt;So, why &lt;strong&gt;&lt;em&gt;1729&lt;/em&gt;&lt;/strong&gt;?&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;I have special love for Mathematics. Unluckily I never got chance to take formal mathematics training. I'm an engineer so know things here and there to solve the problem. May be more than others for Physics and Mathematics just because of my love. It is so much fun doing them. &lt;/p&gt;

&lt;p&gt;In our side of country if you are scoring good marks in School either you become doctor or if little less then engineer. Normally there is no other choices. Hope you got the point why I'm engineer (mine was little too less). But if you ask a name of well known gifted mathematician from India first name come is &lt;a href="https://en.wikipedia.org/wiki/Srinivasa_Ramanujan"&gt;Srinivasa Ramanujan&lt;/a&gt;. And we have a exam series on his name. It is way tough, I still remember that I prepared and never gather enough guts to give one. Damn afraid of failing. But my senior and first leaving mathematics role model my senior in school &lt;a href="http://www.pubfacts.com/author/Vithal+Rangarajan"&gt;Dr.Vithal Rangarajan&lt;/a&gt; scored 2nd rank and joined Medicine. Yet, my another friend &lt;a href="https://twitter.com/path_to_parth"&gt;Dr.Parth Ganatra&lt;/a&gt; same story. You mostly getting gist why we are having rare Ramanujans in India. Because most of them become Doctors. &lt;/p&gt;

&lt;p&gt;Enough of back ground noise. Let's have some fun with numbers. You can check out wiki page for the story of &lt;strong&gt;&lt;em&gt;1729&lt;/em&gt;&lt;/strong&gt; number. It is the smallest number expressible as the sum of two cubes in two different ways. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ok, that is good. But I don't have enough brain power to cross check that. And if that is smallest which are others?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, I decided to find out by self. And at midnight I started working on this. &lt;/p&gt;

&lt;p&gt;My first try was going to question form the result. But for some reason &lt;code&gt;Math.Floor (1728.0 ** (1.0/3.0))&lt;/code&gt; is resulting in &lt;code&gt;11.0&lt;/code&gt;. I have no idea why. It should come &lt;code&gt;12.0&lt;/code&gt;. Then I thought how he has arrived to this number. It is smallest so he must have started from &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;F# gurus can you please tell me why &lt;code&gt;1728.0 ** (1.0/3.0) = 12.0 //false&lt;/code&gt; ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is code snippet.  I start with sequence of numbers and cube it. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let posNum = seq {1..101}

let cube x = x * x * x 

let cubeposNum = 
    posNum 
    |&amp;gt; Seq.map (fun x -&amp;gt; (x, cube x))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have returned tuple instead of cube result so I can use it afterwords in visualizing data.&lt;/p&gt;

&lt;p&gt;Now, its time to find out total combinations &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let totalCombination = 
    cubeposNum 
    |&amp;gt; Seq.map (fun (a,b) -&amp;gt; cubeposNum |&amp;gt; Seq.map (fun (x,y) -&amp;gt; (a,x,b+y)))
    |&amp;gt; Seq.concat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It gives all the possible combinations numbers. Again in tuple I am returning result and numbers that are being cubed and added. Same reason for display purpose.&lt;/p&gt;

&lt;p&gt;Now, time for truth.&lt;/p&gt;

&lt;p&gt;Here is final result &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let finalResult =
    totalCombination
    |&amp;gt; Seq.countBy (fun (x,y,z) -&amp;gt; z)
    |&amp;gt; Seq.filter (fun (x,y) -&amp;gt; y &amp;gt;= 4)
    |&amp;gt; Seq.map (fun (x,y) -&amp;gt; x)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will return Sequence of numbers fulfilling above condition. if you are wondering for &lt;code&gt;y&amp;gt;=4&lt;/code&gt; then 4 is because (1,2,9) is same as (2,1,9). As I need two distinct pair, I having four pair. I did have used greater than 4 but couldn't found any pair bigger than 4 for given set. &lt;/p&gt;

&lt;p&gt;Time for doing some analysis of numbers. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let dirtyHack (inputSeq)=
    let a = inputSeq |&amp;gt; Seq.item 0
    let b = inputSeq |&amp;gt; Seq.item 1
    let c = inputSeq |&amp;gt; Seq.item 2
    (a, b, c)

let pairValues =
    finalResult 
    |&amp;gt; Seq.map (fun x -&amp;gt; totalCombination |&amp;gt; Seq.filter (fun (a,b,c) -&amp;gt; c = x ))
    |&amp;gt; Seq.map (fun a -&amp;gt; a |&amp;gt; Seq.map (fun (x,y,z) -&amp;gt; seq[x;y;z] |&amp;gt; Seq.sort |&amp;gt; dirtyHack))
    |&amp;gt; Seq.map (fun x -&amp;gt; x |&amp;gt; Seq.distinct)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will give Sequence of Sequences which contains tuple of numbers. Where tuple is in form of &lt;code&gt;(a , b, a^3 + b^3)&lt;/code&gt;. &lt;em&gt;Dirty hack&lt;/em&gt; part I couldn't get it right so I will be grateful if someone can provide better solution in that part.&lt;/p&gt;

&lt;p&gt;We have all the things. It's time to put data to view. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//form crazyness - a copy paste from 2010 code :P

let form = new Form(Visible = true, Text = "A Simple F# Form",
                    TopMost = true, Size = Size(600,600))

let data = new DataGridView(Dock = DockStyle.Fill, Text = "Hardy–Ramanujan number",
                            Font = new Font("Lucida Console",12.0f),
                            ForeColor = Color.DarkBlue
                            )


form.Controls.Add(data)

data.DataSource &amp;lt;- (pairValues |&amp;gt; Seq.concat |&amp;gt; Seq.sortBy (fun (x,y,z) -&amp;gt; z) |&amp;gt; Seq.toArray)
data.Columns.[0].Width &amp;lt;- 200
data.Columns.[1].Width &amp;lt;- 200
data.Columns.[2].Width &amp;lt;- 200

data.Columns.[0].HeaderText &amp;lt;- "a"
data.Columns.[1].HeaderText &amp;lt;- "b"
data.Columns.[2].HeaderText &amp;lt;- "(a^3 + b^3)"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clearing up the data showing up in grid view. Below are screen shots of complete data.
&lt;img src="http://kunjan.in/images/1729Form1.PNG" alt="" /&gt;
&lt;img src="http://kunjan.in/images/1729Form2.PNG" alt="" /&gt;
&lt;img src="http://kunjan.in/images/1729Form3.PNG" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Looks good. &lt;/p&gt;

&lt;p&gt;Put on chart to see where data is moving.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let taxicabnumbers = pairValues 
                     |&amp;gt; Seq.concat 
                     |&amp;gt; Seq.sortBy (fun (x,y,z) -&amp;gt; z) 
                     |&amp;gt; Seq.map (fun (x,y,z) -&amp;gt; z) 
                     |&amp;gt; Seq.distinct

Chart.Point (taxicabnumbers,"TaxiCabNumbers","TaxiCab Number")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://kunjan.in/images/1729Chart1.PNG" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;above chart is showing distribution of result of numbers which are fulfilling above condition.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let taxicabnumbersX = pairValues 
                     |&amp;gt; Seq.concat 
                     |&amp;gt; Seq.sortBy (fun (x,y,z) -&amp;gt; z) 
                     |&amp;gt; Seq.map (fun (x,y,z) -&amp;gt; (x,z)) 


Chart.Point (taxicabnumbersX,"TaxiCabNumbersX","TaxiCab Number in ref to X")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://kunjan.in/images/1729Chart2.PNG" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;above chart is showing distribution in compare to number X&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let taxicabnumbersY = pairValues 
                     |&amp;gt; Seq.concat 
                     |&amp;gt; Seq.sortBy (fun (x,y,z) -&amp;gt; z) 
                     |&amp;gt; Seq.map (fun (x,y,z) -&amp;gt; (y,z)) 


Chart.Point (taxicabnumbersY,"TaxiCabNumbersY","TaxiCab Number in ref to Y")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://kunjan.in/images/1729Chart3.PNG" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;above chart is showing distribution in compare to number Y&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Chart.Combine[
    Chart.Point(taxicabnumbersX, "TaxiCabNumbersX")
    Chart.Point(taxicabnumbersY, "TaxiCabNumbersY")
]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://kunjan.in/images/1729Chart4.PNG" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;above chart is showing both X,Y. Here, X and Y is pretty much interchangeable.&lt;/p&gt;

&lt;p&gt;Code is not that good. But F# makes it pretty easy to work with. I will not bash any other language or style of programming today. As it is my &lt;strong&gt;*BirthDay&lt;/strong&gt; today (1712 was pretty boring number and so I took 1729. :P ). But you can make it out. How, easy it can be. &lt;/p&gt;

&lt;p&gt;Ramanujan is having many other interesting formula that can be proved and analyst same way. One of them I personally like is [Partition Number Theory](https://en.wikipedia.org/wiki/Partition&lt;em&gt;(number&lt;/em&gt;theory), but may be next time. At his time we don't that much computing power or programming language to solve this type of problems. Or even prove them. How, he did it. No one knows. (I doubt he must be more functional. ;) ). &lt;/p&gt;

&lt;p&gt;I will really appreciate any input for code. I know it is pretty poor in quality. &lt;a href="https://gist.github.com/kunjee17/6965af56a3821ad2d850"&gt;Gist&lt;/a&gt; is here. I love to have comments and PR. I will update my code/blog accordingly. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Special request. It will be great if someone can compress the code that can be tweeted to &lt;a href="https://twitter.com/fsibot"&gt;fsibot&lt;/a&gt; and it will return 1729. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks for wonderful and supporting community.  &lt;strong&gt;Merry Christmas and Happy New Year&lt;/strong&gt; to all.&lt;/p&gt;

&lt;h2&gt;Update1&lt;/h2&gt;

&lt;p&gt;Special thanks to &lt;a href="https://twitter.com/StachuDotNet"&gt;Stachu Korick&lt;/a&gt; complete logic comes in single tweet. Here it is.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="und" dir="ltr"&gt;&lt;a href="https://twitter.com/fsibot"&gt;@fsibot&lt;/a&gt; seq{for el1 in [1..99] do for el2 in [1..99] do yield el1*el1*el1+el2*el2*el2}|&amp;gt;Seq.countBy(fun z-&amp;gt;z)|&amp;gt;Seq.find(fun(_,y)-&amp;gt;y&amp;gt;=4)|&amp;gt;fst&lt;/p&gt;&amp;mdash; Stachu Korick (@StachuDotNet) &lt;a href="https://twitter.com/StachuDotNet/status/677942581645455360"&gt;December 18, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;This is the reason I love F# community so much. &lt;/p&gt;

&lt;h2&gt;Update2&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://twitter.com/StachuDotNet"&gt;Stachu Korick&lt;/a&gt; is not stopping at all. Here is second version more legitimate one from him.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;&lt;a href="https://twitter.com/fsibot"&gt;@fsibot&lt;/a&gt; &amp;#10;seq{for a in [1..99] do for b in [1..99] do yield (a*a*a)+(b*b*b)}&amp;#10; |&amp;gt;Seq.countBy(fun z-&amp;gt;z)&amp;#10; |&amp;gt;Seq.find(fun(_,y)-&amp;gt;y&amp;gt;=4)&amp;#10; |&amp;gt;fst&lt;/p&gt;&amp;mdash; Stachu Korick (@StachuDotNet) &lt;a href="https://twitter.com/StachuDotNet/status/678059350317998080"&gt;December 19, 2015&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;This is fun part with F# and in general functional language. You make thing work with ugly and &lt;strong&gt;simple&lt;/strong&gt; code. And then re-factor it with beautiful and &lt;strong&gt;simple&lt;/strong&gt; code.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/11/reactive-services-with-servicestack-and-fsharp/</guid><link>http://kunjan.in/2015/11/reactive-services-with-servicestack-and-fsharp/</link><title>Reactive Services with Servicestack and F#</title><description>&lt;p&gt;Reactive word is not new nowadays. If you want your library to get limelight, use reactive word in the name any way possible and it will definitely get initial attention. Reactive word is appropriate for things that follows &lt;a href="http://www.reactivemanifesto.org/"&gt;reactive manifesto&lt;/a&gt;. That is true for now. And there are many variant of libraries on server and client to fulfil this.&lt;/p&gt;

&lt;p&gt;Let's start from the start of web.&lt;/p&gt;

</description><pubDate>Sun, 29 Nov 2015 18:30:00 Z</pubDate><a10:updated>2015-11-29T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Reactive word is not new nowadays. If you want your library to get limelight, use reactive word in the name any way possible and it will definitely get initial attention. Reactive word is appropriate for things that follows &lt;a href="http://www.reactivemanifesto.org/"&gt;reactive manifesto&lt;/a&gt;. That is true for now. And there are many variant of libraries on server and client to fulfil this.&lt;/p&gt;

&lt;p&gt;Let's start from the start of web.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;We were having old web were we used to do post event of page. At the time of posting whole page goes to server. And then &lt;em&gt;loading loading loading&lt;/em&gt; of the page. But after the rise of &lt;a href="https://jquery.com/"&gt;JQuery&lt;/a&gt; page refresh become the thing of past. AJAX was there even before JQuery but become widely used after that only. 
Now, that spinner which was there in browser tab bar / address bar came in center of page. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Side Note&lt;/strong&gt;: If you want to make ajax request faster just use a spinner &lt;strong&gt;gif&lt;/strong&gt; which spins faster. Tried and tested thing. With no code change performance issue will be resolved. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With hardware getting better and if I be more specific more connected it is easy to store lots of data. And this makes things slower eventually. And user have to wait even for ajax request. So, what is next. With &lt;a href="http://html5doctor.com/"&gt;HTML5&lt;/a&gt; allowing Web Sockets and Server Events things are becoming real-time as now pushing data from Server to client is possible. &lt;/p&gt;

&lt;p&gt;Server and Client is no more one-sided love story. Now, both can send message to each other. This new change allows build more reactive system. &lt;/p&gt;

&lt;p&gt;Let's take example. I request my friend to come with me to visit &lt;code&gt;X&lt;/code&gt; place. I got answer &lt;code&gt;yes, will go.&lt;/code&gt; So, my request is accepted but we haven't visited that place. Visit is still pending. After sometime we visited. So, result happen. I don't have to ask again and again. But that event pushed by that end.&lt;/p&gt;

&lt;p&gt;Same goes for server. In post event client request for some data. But that data may or may not be available at that specific moment. So, Server can send &lt;code&gt;201 - Accepted&lt;/code&gt; status to client. So, data is accepted and waiting for processed result. And whenever result it ready server push data to client. This way neither server is blocked nor client. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is will be no need for spinner. Neither slow not fast. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://signalr.net/"&gt;SignalR&lt;/a&gt; is very well-known example of real-time processing. But I wanted to achieve this by API framework. And nothing can be better than &lt;a href="https://servicestack.net/"&gt;Servicestack&lt;/a&gt;. It is having Server Sent Event / Server Event support in all 4+ version. So, why not?&lt;/p&gt;

&lt;p&gt;Let's jump into code. Code is in &lt;a href="http://fsharp.org/"&gt;F#&lt;/a&gt;. It is in F# for a reason and that you will know. Keep on reading. &lt;/p&gt;

&lt;p&gt;I am running a standalone Servicestack host but same code will working with Asp.net host also. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Programe.fs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;module reactiveServicestack.main
open ServiceStack
open System
open ServiceStack.Logging

type AppHost() = 
    inherit AppHostHttpListenerBase ("Hello F# Service", typeof&amp;lt;HelloService&amp;gt;.Assembly)
    override this.Configure container = 
        this.Plugins.Add(new PostmanFeature()) |&amp;gt; ignore
        this.Plugins.Add(new CorsFeature()) |&amp;gt; ignore
        this.Plugins.Add(new ServerEventsFeature()) |&amp;gt; ignore
        let serverEventsFeature = this.GetPlugin&amp;lt;ServerEventsFeature&amp;gt;() 
        printfn "%s" serverEventsFeature.StreamPath
        ignore()


[&amp;lt;EntryPoint&amp;gt;]
let main args = 
    LogManager.LogFactory &amp;lt;- new ConsoleLogFactory()
    let env_port = Environment.GetEnvironmentVariable("PORT")
    let port = if env_port = null then "1234" else env_port
    let host = "http://localhost:8080/"
    printfn "listening on %s ..." host
    let appHost = new AppHost()
    appHost.Init() |&amp;gt; ignore
    appHost.Start host |&amp;gt; ignore
    while true do Console.ReadLine() |&amp;gt; ignore
    0 // return an integer exit code
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above code is very much classic Servicestack. Nothing fancy here. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;HelloDto.fs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;namespace reactiveServicestack
open System
open ServiceStack

//I can't but CLI can mutate this one
[&amp;lt;CLIMutable&amp;gt;]
type HelloResponse = { Result:string }


//There always be hello world, atleast something should be running
[&amp;lt;Route("/hello")&amp;gt;]
[&amp;lt;Route("/hello/{name}")&amp;gt;]
type Hello() =
    interface IReturn&amp;lt;HelloResponse&amp;gt;
    member val Name = "" with get, set
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again, POCO members. Hello and HelloResponse. No magic here also. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;AsyncProcessor.fs&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#nowarn "40"
namespace reactiveServicestack

module SSE =
    open ServiceStack
    let private serverEvent = ServiceStackHost.Instance.Container.TryResolve&amp;lt;IServerEvents&amp;gt;()
    let NotifyAll (msg:'T) = serverEvent.NotifyAll(msg)



module AsyncProcess =
    open System

    let rnd = new Random()
    let agent = 
        MailboxProcessor.Start(fun inbox -&amp;gt; 
            let rec messageLoop = 
                async {
                    let! (msg:Hello) = inbox.Receive()
                    do! Async.Sleep(3000)
                    Console.WriteLine("Original " + msg.Name)
                    let reversed = msg.Name.ToCharArray() |&amp;gt; Array.rev |&amp;gt; fun x -&amp;gt; new String (x)
                    Console.WriteLine("Reversed " + reversed)
                    SSE.NotifyAll({HelloResponse.Result = reversed})
                    return! messageLoop
                }
            messageLoop)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here fun starts. I am creating Actor which takes Hello typed message and NotifyAll with HelloResponse after processing name string. &lt;/p&gt;

&lt;p&gt;Let's understand complicated parts. &lt;/p&gt;

&lt;p&gt;I have created SSE module because if I open Servicestack I was getting &lt;code&gt;asyncbuilder&lt;/code&gt; compile error at async keyword. And I needed to open it to expose all the extension methods. So, I wrap things up in another module. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don't&lt;/em&gt; create seperate instance of any kind of ServerEvent implementation instead resolve it as above. Else things will surely not work. I was stuck at that problem for couple of days. &lt;/p&gt;

&lt;p&gt;Actor is very much traditional, I am reversing a string and as it is &lt;em&gt;very complex&lt;/em&gt; process. My actor will take precisely &lt;strong&gt;3&lt;/strong&gt; seconds to do it. And then I am notifying to all from actor itself. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In ideal case it should be Subscriber ID/s or Channel/s.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As, actor is async by nature it may complicate stuff to return things from agent loop. If you have used framework like &lt;a href="http://getakka.net/"&gt;AKKA&lt;/a&gt; you must be knowing that &lt;code&gt;ASK&lt;/code&gt; is performance heavy in compare to &lt;code&gt;TELL&lt;/code&gt;. This way you can fire result from Actor itself. &lt;/p&gt;

&lt;p&gt;Now, you can easily guess what service will look like&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hello.fs&lt;/code&gt;
    namespace reactiveServicestack
    open ServiceStack
        open ServiceStack.Logging
        open System
        open System.Net&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    type HelloService() =
        inherit Service()
        member val serverEvents:IServerEvents = null with get, set
        member this.Get (request:Hello) = 
            {Result = "Hello " + request.Name}
        member this.Post (request: Hello) =
            AsyncProcess.agent.Post(request)
            HttpStatusCode.Accepted
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And final piece of puzzle &lt;strong&gt;HTML&lt;/strong&gt; 
&lt;code&gt;default.html&lt;/code&gt;
    &lt;html&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Reactive Servicestack&amp;lt;/title&amp;gt;
    &amp;lt;link href="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.css" rel='stylesheet' type='text/css'&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;Hello this is default page&amp;lt;/div&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;label for="name"&amp;gt;Enter Your name&amp;lt;/label&amp;gt;
        &amp;lt;input type="text" id="name" value="" /&amp;gt;
        &amp;lt;button id="reverse"&amp;gt;Reverse&amp;lt;/button&amp;gt;
        &amp;lt;ul&amp;gt;

        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script src="//code.jquery.com/jquery-2.1.4.min.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src="/js/ss-utils.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type="text/javascript"&amp;gt;
        $('#name').keypress(function (e) {
            var key = e.which;
            if(key == 13)  // the enter key code
            {
                $('#reverse').click();
                $('#name').val('');
                return false;  
            }
        }); 
        $('#reverse').click(function(e) {
            e.preventDefault();
            var name = $('#name').val();

            if (name != '' || name != undefined) {
                $.post('/hello', {
                        name: name
                    })
                    .done(function() {
                        toastr.success(name + ' is very much Accepted!')
                    });
            }
        });
        var addName = function(reversedName) {
            $('ul').append('&amp;lt;li&amp;gt;' + reversedName + '&amp;lt;/li&amp;gt;');
        };
        var channel = 'home';
        var eventSource = new EventSource('/event-stream?channel=home&amp;amp;t=' + new Date().getTime());
        $(eventSource).handleServerEvents({
            handlers: {
                HelloResponse: function(msg) {
                        console.log(msg);
                        addName(msg.Result);
                    }
                    //... Register custom handlers
            }
        });

    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am taking post request and returning &lt;code&gt;201-accepted&lt;/code&gt; instead of &lt;code&gt;200-ok&lt;/code&gt; from server. On client it will go in &lt;code&gt;success&lt;/code&gt; callback only.  &lt;/p&gt;

&lt;p&gt;This way we can easily decouple server and client. And this can be used for games, stock market, betting or other reactive systems. &lt;/p&gt;

&lt;p&gt;I am not going in detail of Actor or AKKA but as it natively available in F# so I used it. One of the reason beside being more fun while writing code. &lt;/p&gt;

&lt;p&gt;Please provide your input for this. I don't know this is right / wrong or can't say. But it is very much possible that using current technology even without enabling Web Sockets (&lt;em&gt;Most of the cloud provider supports web sockets&lt;/em&gt;) one can create reactive web services.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;P.S. - With this there will be no need for spinner at all.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/11/azure-websites-with-paket/</guid><link>http://kunjan.in/2015/11/azure-websites-with-paket/</link><title>Azure web sites with Paket</title><description>&lt;p&gt;Whoever worked with Microsoft Shop knows about &lt;a href="https://www.nuget.org/"&gt;nuget&lt;/a&gt;. It is package manager for anything and everything related to .Net. And it is getting better and better with versions coming in. But again it is nowhere near maturity needed to work with projects having many small projects. Things get cranky soon. &lt;/p&gt;

</description><pubDate>Mon, 02 Nov 2015 18:30:00 Z</pubDate><a10:updated>2015-11-02T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Whoever worked with Microsoft Shop knows about &lt;a href="https://www.nuget.org/"&gt;nuget&lt;/a&gt;. It is package manager for anything and everything related to .Net. And it is getting better and better with versions coming in. But again it is nowhere near maturity needed to work with projects having many small projects. Things get cranky soon. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Now, there is better option as per my opinion called &lt;a href="https://fsprojects.github.io/Paket/"&gt;Paket&lt;/a&gt;. Very easy to get started. And so damn reliable. Couple of more command to learn but I guess it is ok. It most of the mess of nuget. And best thing no XML. &lt;/p&gt;

&lt;p&gt;Now, I normally throw anything and everything to Azure websites. Just do experiments and its free. Mostly I put project in &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; and pull in Azure. Easiest way to test something or anything which need network. &lt;/p&gt;

&lt;p&gt;Now, you can have Paket also instead of nuget with minimum changes. There are detailed &lt;a href="http://www.hanselman.com/blog/RunningSuaveioAndFWithFAKEInAzureWebAppsWithGitAndTheDeployButton.aspx"&gt;article&lt;/a&gt; you can found written by &lt;a href="http://www.hanselman.com"&gt;Scott Hanselman&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;But for you existing or new web project what can be minimum requirement. &lt;/p&gt;

&lt;p&gt;You need to create &lt;code&gt;.deployment&lt;/code&gt; in root of your project. It will tell Azure build system to not to go with defaults. (I guess build system is called Kudu.)&lt;/p&gt;

&lt;p&gt;In that file copy paste below code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[config]
command = build.cmd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two lines to tell use &lt;code&gt;build.cmd&lt;/code&gt; to build project. &lt;/p&gt;

&lt;p&gt;Now, we obviously need &lt;code&gt;build.cmd&lt;/code&gt; file in root. &lt;/p&gt;

&lt;p&gt;And here is code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@ECHO OFF
setlocal

echo ====== Restoring packages... ======

if not exist .paket\paket.exe (
  .paket\paket.bootstrapper.exe
)

.paket\paket.exe restore

if not %ERRORLEVEL% == 0 (
  echo ====== Failed to restore packages. ======
  exit 1
)

echo ====== Building... ======

msbuild /p:Configuration=Release

if not %ERRORLEVEL% == 0 (
echo ====== Build failed. ======
  exit 1
)

if not "%DEPLOYMENT_TARGET%" == "" (
  echo ====== Deploying... ======
  xcopy /y /e &amp;lt;project name&amp;gt; "%DEPLOYMENT_TARGET%"
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Code is very much self explanatory. &lt;/p&gt;

&lt;p&gt;First pull latest paket.exe, then restore package. msbuild is there only so use it. And age-old xcopy to copy built files to deployment target. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bang! Its done. You can check things out in with log tail or console on azure portal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to go little bit advanced and want kinda build system then you can always try for &lt;a href="http://fsharp.github.io/FAKE/"&gt;FAKE&lt;/a&gt;. But if you are in great hurry and don't want waste time with nuget issues go for Paket. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy Packaging!!!&lt;/strong&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/11/angularjs-and-mess-we-are-in/</guid><link>http://kunjan.in/2015/11/angularjs-and-mess-we-are-in/</link><title>Angularjs and the Mess we are in</title><description>&lt;p&gt;Who doesn't know &lt;a href="https://angularjs.org/"&gt;Angularjs&lt;/a&gt;?!? Everyone worked is web, mobile, server, windows, mac, Linux, Google, Microsoft or anyway related to this knows about it. And its fun when people tell me&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know about angularjs. Its pretty hot now a days. I'm planning to learn it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh man...&lt;/p&gt;

</description><pubDate>Sun, 01 Nov 2015 18:30:00 Z</pubDate><a10:updated>2015-11-01T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Who doesn't know &lt;a href="https://angularjs.org/"&gt;Angularjs&lt;/a&gt;?!? Everyone worked is web, mobile, server, windows, mac, Linux, Google, Microsoft or anyway related to this knows about it. And its fun when people tell me&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You know about angularjs. Its pretty hot now a days. I'm planning to learn it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh man...&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Ok I am no expert here in Angularjs. And I prefer not to be expert with any framework. Be it anything. But you know there is another &lt;a href="https://angular.io/"&gt;Angularjs&lt;/a&gt; from another universe. If you are learning (like seriously) then go for this one.&lt;/p&gt;

&lt;p&gt;But be sure. There is a chance you will be inviting a hell of mess. I have been working with angular since last 3+ year. Either leading a team or part of team. And one thing I learn hard way. You need a discipline when you are working with JavaScript. But you need discipline of delta forces when you are working with angularjs.&lt;/p&gt;

&lt;p&gt;As metioned in site it is a superhero. And like every superhero it also should have responsiblitiy. But angular is abusing JavaScript every way possible. If something is possible that doesn't means we should be doing it. We have damn book called &lt;a href="http://shop.oreilly.com/product/9780596517748.do"&gt;JavaScript: Good Parts&lt;/a&gt; all about it.&lt;/p&gt;

&lt;p&gt;It called Good Parts means you just use Good Parts and leave bad one alone. But with angular it is like you are leaving in Bar and told not to touch Alcohol. On top of it you have &lt;a href="https://play.google.com/store/apps/details?id=com.untappdllc.app&amp;amp;hl=en"&gt;untapped&lt;/a&gt; installed in your mobile.&lt;/p&gt;

&lt;p&gt;Why this? Lets take things one by one&lt;/p&gt;

&lt;h2&gt;Scope - Poor man's global&lt;/h2&gt;

&lt;p&gt;We should not use global. That is proven truth. No, doubt in it. But what about &lt;strong&gt;We love &lt;em&gt;global&lt;/em&gt; so much.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We got scope then. JSLint can't catch it and we still have it. Now, angular lover may argue that we should not use it. But how can you prevent it from using it. It all comes to putting as rule in project wiki or training. But there is no way to prevent it. At least I don't know one.&lt;/p&gt;

&lt;h2&gt;Magical- Directives&lt;/h2&gt;

&lt;p&gt;Whenever you start abusing Angularjs people comes up with &lt;code&gt;But we have Directives?!?&lt;/code&gt; that magically solves everything. The problem with that it is hiding too much. Its good if things works out but when it breaks. Oh man. &lt;em&gt;You seriously wish that never happen.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you still like Directives try implement two directive on one. It will be too much fun. And pure magic if one directive is created by you and other is created by third third-party.&lt;/p&gt;

&lt;h2&gt;Three musketeers - Service, Factory and Provider&lt;/h2&gt;

&lt;p&gt;I don't know how many times I have searched google with &lt;code&gt;Service vs Factor vs Provider&lt;/code&gt; . Nowadays you don't even have to put angularjs on top of that. If you write above message you will have angularjs answer only. It way too complicated for simple module with helper functions. Aren't we all happy with few base global in age of JQuery that passed in as parameter in modular functions. And now we have DI(Proudly called as Dependancy Injection).&lt;/p&gt;

&lt;h2&gt;Wired - DI&lt;/h2&gt;

&lt;p&gt;It is good thing. A good thing invented from the object-oriented concept. And then it is used almost every where. whether it is needed or not. For the case of Angular it is good we can have module without worrying about modules. Directly available in function. But then what about other libraries we need to created wrapper around it to make angular way. And then have plenty of gulp or grunt plumbing tools so you can save your ass when things minified and combined.&lt;/p&gt;

&lt;h2&gt;Grass is always green on other side&lt;/h2&gt;

&lt;p&gt;I don't say angular beast we never wanted. But you need to use it carefully. I have seen more than enough projects, new and legacy using angular in all wrong way. It make tough to debug or extend. Every time you got feeling that lets dump it all and make it again. We don't need to learn another framework just learn &lt;code&gt;JavaScript - Good Parts&lt;/code&gt;. And things are all good. But instead most of resources are wasted on teaching Angularjs. With a hope that &lt;strong&gt;Super Hero&lt;/strong&gt; framework will solve every issue we have.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It is not going to be. It was never going to be. It will never going to be.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We are the one who gonna solve our issue. Pick your framework wisely and try not to hope so much from it.&lt;/p&gt;

&lt;h2&gt;My Personal Pick&lt;/h2&gt;

&lt;p&gt;If I want to go so hard on my self and don't want any error in my &lt;strong&gt;to be&lt;/strong&gt; big project. I will choose &lt;a href="http://elm-lang.org"&gt;elm&lt;/a&gt;. It's not framework but a hell of a language with crazy html support.&lt;/p&gt;

&lt;p&gt;If people are coming from JavaScript land to join me then I ll go for &lt;a href="https://facebook.github.io/react/"&gt;react&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there is a need quick two-way binding on a single page then &lt;a href="http://knockoutjs.com/"&gt;knockout&lt;/a&gt; is a good thing.&lt;/p&gt;

&lt;p&gt;If I want to go fast for small project. And I am the only one working on it at least for now. Or may be some single person working on it. I will go with Angularjs. I don't mind. It is quick and easy.&lt;/p&gt;

&lt;p&gt;Big project. &lt;a href="http://emberjs.com/"&gt;Ember&lt;/a&gt; is there. But few times I feel it is unnecessary complexity. Two way binding and not much of angular mess &lt;a href="http://aurelia.io/"&gt;Aurelia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Above all opinion is derived from my personal experience and not influenced by any one. And it is my own.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-command-pattern/</guid><link>http://kunjan.in/2015/04/functional-command-pattern/</link><title>Functional Command Pattern</title><description>&lt;p&gt;Command pattern is a pattern which allows executor of the pattern to execute or playback the commands. In most of the application wherever Undo/Redo is implemented this pattern is used. &lt;/p&gt;

&lt;p&gt;Here is C# code. &lt;/p&gt;

</description><pubDate>Fri, 24 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-24T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Command pattern is a pattern which allows executor of the pattern to execute or playback the commands. In most of the application wherever Undo/Redo is implemented this pattern is used. &lt;/p&gt;

&lt;p&gt;Here is C# code. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/5wmvGN" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Now, in this code Command Pattern is not in its purest form. As, normally in command pattern we are saving state of outside object. Instead I just returned the result to mock out side object. &lt;/p&gt;

&lt;p&gt;Now have a look at similar F# code. That is doing kinda same thing. &lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/htQsqv" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Here, instead of class I am using functions with the command type. And definition of the command is given as type instead of interface. Now, this is fun with functional programming in general where functions are first class citizen. I can save commands and events like objects only. I don't have to wrap around some classes. This makes code more concise.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Fan of &lt;a href="http://martinfowler.com/bliki/CQRS.html"&gt;CQRS&lt;/a&gt; and &lt;a href="http://www.martinfowler.com/eaaDev/EventSourcing.html"&gt;Event Sourcing&lt;/a&gt;; listen up these both design concepts are standing on the shoulders of command pattern.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-strategy-pattern/</guid><link>http://kunjan.in/2015/04/functional-strategy-pattern/</link><title>Functional Strategy Pattern</title><description>&lt;p&gt;Another pattern that is widely used in Object Oriented world. And as far as .Net world is concern it is may be most used pattern in wide range of .Net API. And it &lt;em&gt;heavily&lt;/em&gt; used in &lt;em&gt;heavily&lt;/em&gt; used LINQ API.&lt;/p&gt;

&lt;p&gt;So, I guess giving a understanding of that is kinda waste of space. Have a look at C# code.&lt;/p&gt;

</description><pubDate>Thu, 23 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-23T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;Another pattern that is widely used in Object Oriented world. And as far as .Net world is concern it is may be most used pattern in wide range of .Net API. And it &lt;em&gt;heavily&lt;/em&gt; used in &lt;em&gt;heavily&lt;/em&gt; used LINQ API.&lt;/p&gt;

&lt;p&gt;So, I guess giving a understanding of that is kinda waste of space. Have a look at C# code.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/c4qcvo" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;People familiar with LINQ and lovers of Lambda will definitely argue that this is can be replaced by delegates. And for the face I am arguing the same. But for now I have took this sample as a traditional practice. &lt;/p&gt;

&lt;p&gt;Now, have a look at the F# code doing the same. &lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/rhn63P" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Now, it is definitely not &lt;strong&gt;one to one&lt;/strong&gt; replacement as I have did in last few posts. But here I have replaced class with function but we are achieving the same thing.&lt;/p&gt;

&lt;p&gt;Now, what is strategy pattern. As name suggest it is used to provide strategy from the consumer end. It is like I am saying that I want coffee and also I am telling I want cappuccino. And as shown in sample for sorting I am passing sorting strategy also. For example case I haven't passed array else I have to pass array or list and also strategy or how to sort it. It is mainly used when consumer is having control on how to do execution but execution is done by someone else. &lt;/p&gt;

&lt;p&gt;Now, in case of C# and Java8 where lambda is available. So I have this functional behavior there also. But for the fact it is functional programming concept of passing functions around &lt;em&gt;(or some may argue it is object oriented concept in purest form)&lt;/em&gt; and syntax wise it more suitable / human friendly in functional programming language. &lt;/p&gt;

&lt;p&gt;Here is C# example.&lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/63PK93" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;It is very much near to F# counter part. Only F# syntax is having less noise. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It something all togather when this pattern shown in context of Functional Programming. I am just composing functions. But it serves as Strategy Pattern of OOP so I have used that.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-singleton-pattern/</guid><link>http://kunjan.in/2015/04/functional-singleton-pattern/</link><title>Functional Singleton Pattern</title><description>&lt;p&gt;This is my favorite pattern. First pattern I learn. And till date I don't know where to use it. &lt;strong&gt;So, I use everywhere. :P&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;I have mainly used for database connection object and then all JavaScript frameworks are exposing Singleton object only. I can say it is quite useful in case of web.&lt;/p&gt;

</description><pubDate>Wed, 22 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-22T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;This is my favorite pattern. First pattern I learn. And till date I don't know where to use it. &lt;strong&gt;So, I use everywhere. :P&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;I have mainly used for database connection object and then all JavaScript frameworks are exposing Singleton object only. I can say it is quite useful in case of web.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Fun part about this pattern is that most of the people including me always use this pattern to show off that we know patterns and we follow it in practice but in most cases that practice starts and stops with Singleton Pattern. &lt;/p&gt;

&lt;p&gt;Let's understand the pattern, as name suggested this pattern is propagating singularity. Object of specific class will be created once and only once but No more. Object creation is totally hidden away from consumer and with static method object will be handed over to consumer. If there is a instance presence it will be handed over else new instance will be created and it will be given to consumer.&lt;/p&gt;

&lt;p&gt;Let's check out the C# code&lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/ou8ReI" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;See, simple and easy. &lt;/p&gt;

&lt;p&gt;And now here is F# code. Even simpler and easier &lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/EAcx3W" frameborder="0"&gt;&lt;/iframe&gt;

&lt;blockquote&gt;
  &lt;p&gt;Look ma no &lt;code&gt;null&lt;/code&gt;. As F# is not allowing null by default in the system there is no need to check it. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Instead make constructor private to stop creating object of type and provide same instance of type again and again. &lt;/p&gt;

&lt;p&gt;Now, in current scenarios where garbage collector are so powerful and we are having quite a good amount of hardware to process. Singleton is not used while writing domain/business code. But still it is widely used on API side to expose specific functionality. &lt;/p&gt;

&lt;p&gt;I am still to find relevance in case of functional programming. In functional programming &lt;code&gt;type&lt;/code&gt; is different then &lt;code&gt;class&lt;/code&gt;. In normal cases they don't have behaviors attached with it. So, it reducing the need of this pattern. &lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/functional-factory-pattern/</guid><link>http://kunjan.in/2015/04/functional-factory-pattern/</link><title>Functional Factory Pattern</title><description>&lt;p&gt;The fun part working or explaining functional pattern is word &lt;code&gt;functional&lt;/code&gt; can be used in very &lt;code&gt;fun&lt;/code&gt; way. Just like it is used in title here. &lt;/p&gt;

&lt;p&gt;Now, factory pattern may be the most used pattern in Object Oriented world. Here is code in &lt;code&gt;C#&lt;/code&gt;.&lt;/p&gt;

</description><pubDate>Tue, 21 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-21T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;The fun part working or explaining functional pattern is word &lt;code&gt;functional&lt;/code&gt; can be used in very &lt;code&gt;fun&lt;/code&gt; way. Just like it is used in title here. &lt;/p&gt;

&lt;p&gt;Now, factory pattern may be the most used pattern in Object Oriented world. Here is code in &lt;code&gt;C#&lt;/code&gt;.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/omFgPe" frameborder="0"&gt;&lt;/iframe&gt;  

&lt;p&gt;Factory method is basically used to abstract away the object creation. I am not worried how object is created but I am worried about the behavior of the objects that are created. 
Now, lets have a look at &lt;code&gt;F#&lt;/code&gt; equivalent&lt;/p&gt;

&lt;iframe width="100%" height="475" src="https://dotnetfiddle.net/Widget/vt23Gc" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;If you can see it is short and simple and providing same result.&lt;/p&gt;

&lt;p&gt;Now, functional programming is not &lt;code&gt;one to one&lt;/code&gt; map with Object Oriented programming. But we can always have similar a concept.&lt;/p&gt;

&lt;p&gt;Factory Pattern simply hiding the object creation. And in F# we are having option type which is helping us to provide concrete definition of product. And that is the reason we can skip the concrete class and have product definition in type.&lt;/p&gt;

&lt;p&gt;I have took examples for this post from &lt;a href="http://www.dofactory.com/"&gt;Dofactory&lt;/a&gt; and &lt;a href="http://fssnip.net/authors/Tao+Liu"&gt;Tao Liu&lt;/a&gt; s work. I have made few changes thought to make it as similar as possible. In future post I will try to go into greater detail about respective pattern and also check out patterns that can be absolute when you come to the world of functional programming. &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;F# people. Your comments and review are required. Will update the code as per the suggestions. Do provide them. I don't mind adding examples of other functional language if anyone is helping me out. &lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</guid><link>http://kunjan.in/2015/04/demystifying-design-pattern-in-a-functional-way/</link><title>Demystifying Design Pattern in a Functional Way</title><description>&lt;p&gt;As functional programming is taking pace in current software development. There is always a question what is the difference and why on the earth I should bother about it. &lt;/p&gt;

&lt;p&gt;Most of the time reason of the question comes because of human nature of resistance towards learning new things. And then there are people who can easily learn new things but even for them unlearning something and re-learning new things is pretty tough. And this makes a problem every time. &lt;/p&gt;

</description><pubDate>Mon, 20 Apr 2015 18:30:00 Z</pubDate><a10:updated>2015-04-20T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;As functional programming is taking pace in current software development. There is always a question what is the difference and why on the earth I should bother about it. &lt;/p&gt;

&lt;p&gt;Most of the time reason of the question comes because of human nature of resistance towards learning new things. And then there are people who can easily learn new things but even for them unlearning something and re-learning new things is pretty tough. And this makes a problem every time. &lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;Here I am not saying I am going to explain anything as expert. I am no where near expert and I also faces same problems as above. But I guess new things are always worth trying. &lt;/p&gt;

&lt;p&gt;Now one the things that get projected as &lt;strong&gt;silver bullet&lt;/strong&gt; for every software solutions is &lt;a href="https://en.wikipedia.org/wiki/Software_design_pattern"&gt;Design Patterns&lt;/a&gt;. Now for the facts they are good, very good. May be best thing that can happen to Object Oriented Programming. But it is showing a concept and most of the time we loose that concept in an implementation. &lt;/p&gt;

&lt;p&gt;If we go into history, there are two ways of solving problem one is &lt;a href="https://en.wikipedia.org/wiki/Alan_Turing"&gt;Turing&lt;/a&gt; way (OOP) and other is &lt;a href="https://en.wikipedia.org/wiki/Alonzo_Church"&gt;Church&lt;/a&gt; way (FP). That is it. They both are ways and you can achieve goals both ways. &lt;/p&gt;

&lt;p&gt;Now here comes the personal choice what way you like to choose based on given circumstances. Turing way is good when I have limited resources to process details/data. While Church way is good when I have good number of resources to process details/data. &lt;/p&gt;

&lt;p&gt;For me or I guess for all the people from functional programming community Church ways is a choice. And visible benefit of selecting that is readability and representation of code I am doing. It is more like what I am saying is I am writing. And now it is up to computer to process that. Now, computer need to be that powerful to process almost natural language.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am not considering natural / logic language here. It is out of scope of this article, blog and also my brain for now. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that is reason it is getting pace now a days. We are having hardware resources to process that. Or may be we can say on reverse way that to utilize this much hardware church based approach is far better. As it is having benefit towards making things simple.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="http://www.infoq.com/presentations/Simple-Made-Easy"&gt;I have said simple, I haven't said easy&lt;/a&gt;.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, here comes the problem. I need to unlearn or relearn the concepts I have learn. And I have made it easy for me after working so hard. &lt;/p&gt;

&lt;p&gt;Practically speaking I don't see any way out. But there is no need to completely unlearn it but may be can be used in some other way. Like the Design Pattern from Object Oriented world. &lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;I love this slide from &lt;a href="https://twitter.com/ScottWlaschin"&gt;@ScottWlaschin&lt;/a&gt; &amp;#39;s talk on FP &amp;quot;patterns&amp;quot; &lt;a href="http://t.co/8UuwVqlelD"&gt;pic.twitter.com/8UuwVqlelD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Knot, Not Naught! (@jeroldhaas) &lt;a href="https://twitter.com/jeroldhaas/status/535919819355598848"&gt;November 21, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;I guess that was easy and simple both. Everything is just a functions. Ok, that is said I am sharing a video everyone in functional programming just loves from &lt;a href="https://twitter.com/ScottWlaschin"&gt;Scott Wlaschin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/113588389" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/113588389"&gt;Functional programming design patterns by Scott Wlaschin&lt;/a&gt; from &lt;a href="https://vimeo.com/ndcconferences"&gt;NDC Conferences&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Now, in coming post I will try to take every pattern one by one and try to demystify it. Obviously in a functional way. And also try to explore some functional patterns also. Stay tuned. &lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://kunjan.in/2015/03/journey-in-search-of-destination/</guid><link>http://kunjan.in/2015/03/journey-in-search-of-destination/</link><title>Journey in Search of Destination</title><description>&lt;p&gt;I never thought I would make this public. I wrote long back for one of my dear cousin. It was relevant then. But it is more relevant now. One of my best friend, batch mate, college mate, colleague at one point of time, rommie is now moving to another country. With a aim to never looking back for all the good reasons. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/nrezzzz"&gt;Andrew Vyas&lt;/a&gt; this is for you. You are one of the friend I never wanted because I knew one day time flew and you or me will move on and that may be good for future but at point it is utterly painful. Pain that can't be defined by words my friend. But still here are few words&lt;/p&gt;

</description><pubDate>Sat, 07 Mar 2015 18:30:00 Z</pubDate><a10:updated>2015-03-07T18:30:00Z</a10:updated><a10:content type="html">&lt;p&gt;I never thought I would make this public. I wrote long back for one of my dear cousin. It was relevant then. But it is more relevant now. One of my best friend, batch mate, college mate, colleague at one point of time, rommie is now moving to another country. With a aim to never looking back for all the good reasons. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/nrezzzz"&gt;Andrew Vyas&lt;/a&gt; this is for you. You are one of the friend I never wanted because I knew one day time flew and you or me will move on and that may be good for future but at point it is utterly painful. Pain that can't be defined by words my friend. But still here are few words&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;मंजिल की तलाश में दूर हम निकल गए&lt;br /&gt;
रस्ते बनते गए हमराही मिलते गए&lt;br /&gt;
मंजिल तोह आज भी दूर है&lt;br /&gt;
मंजिल के लिए प्यार भी  वही है&lt;br /&gt;
लेकिन पता नहीं क्यों रस्ते इतने अच्छे क्यों है&lt;br /&gt;
आँखे इतनी नर्म क्यों है&lt;br /&gt;
मंजिल पाने की चाह तो आज भी वही है&lt;br /&gt;
हमराही को छोड़ने का गम क्यों है 
हमराही कल भी बिछड़े थे, आज भी बिछड़ रहे है&lt;br /&gt;
लेकिन दील मे एक सन्नाटा, तन्हाई, दर्द आज ही क्यों है&lt;br /&gt;
मंजिल की तलाश में हम तो फीर भी निकल चले है&lt;br /&gt;
रस्ते फीर बनते चले है, हमराही फीर मिलते चले है&lt;br /&gt;
लेकिन दील मै उनकी याद क्यों है, ये दर्द एक बेचैनी सि क्यों है &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For people who don't understand Hindi, here is English translation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In search of destination we came long way&lt;br /&gt;
roads started carving them selves, new companion started joining me&lt;br /&gt;
destination is still far&lt;br /&gt;
love for destination is still there&lt;br /&gt;
but don't know why roads seems more beautiful&lt;br /&gt;
and have tears at the corner of my eyes&lt;br /&gt;
Desire to get to the destination is still the same&lt;br /&gt;
then why there is pain for leaving companion back&lt;br /&gt;
I left companion and I am leaving companion back&lt;br /&gt;
then why there is silence, loneliness and pain in heart&lt;br /&gt;
Still moving on in search of destination&lt;br /&gt;
roads are being made again, companion are started joining again&lt;br /&gt;
then why there are memories them of who left behind, why there is pain, restlessness in heart.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dear friend wherever you go my wishes and prayers are always there for you.&lt;/p&gt;
&lt;/blockquote&gt;
</a10:content></item></channel></rss>